

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Feb 19 20:52:28 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 07/09/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1719 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0008                     bsr             equ	8
    53     0005                     fsr0h           equ	5
    54     0004                     fsr0l           equ	4
    55     0007                     fsr1h           equ	7
    56     0006                     fsr1l           equ	6
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0001                     indf1           equ	1
    60     000B                     intcon          equ	11
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0009                     wreg            equ	9
    66     0000                     INDF0           equ	0	;# 
    67     0001                     INDF1           equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR0L           equ	4	;# 
    71     0005                     FSR0H           equ	5	;# 
    72     0006                     FSR1L           equ	6	;# 
    73     0007                     FSR1H           equ	7	;# 
    74     0008                     BSR             equ	8	;# 
    75     0009                     WREG            equ	9	;# 
    76     000A                     PCLATH          equ	10	;# 
    77     000B                     INTCON          equ	11	;# 
    78     000C                     PORTA           equ	12	;# 
    79     000D                     PORTB           equ	13	;# 
    80     000E                     PORTC           equ	14	;# 
    81     000F                     PORTD           equ	15	;# 
    82     0010                     PORTE           equ	16	;# 
    83     0011                     PIR1            equ	17	;# 
    84     0012                     PIR2            equ	18	;# 
    85     0013                     PIR3            equ	19	;# 
    86     0015                     TMR0            equ	21	;# 
    87     0016                     TMR1            equ	22	;# 
    88     0016                     TMR1L           equ	22	;# 
    89     0017                     TMR1H           equ	23	;# 
    90     0018                     T1CON           equ	24	;# 
    91     0019                     T1GCON          equ	25	;# 
    92     001A                     TMR2            equ	26	;# 
    93     001B                     PR2             equ	27	;# 
    94     001C                     T2CON           equ	28	;# 
    95     008C                     TRISA           equ	140	;# 
    96     008D                     TRISB           equ	141	;# 
    97     008E                     TRISC           equ	142	;# 
    98     008F                     TRISD           equ	143	;# 
    99     0090                     TRISE           equ	144	;# 
   100     0091                     PIE1            equ	145	;# 
   101     0092                     PIE2            equ	146	;# 
   102     0093                     PIE3            equ	147	;# 
   103     0095                     OPTION_REG      equ	149	;# 
   104     0096                     PCON            equ	150	;# 
   105     0097                     WDTCON          equ	151	;# 
   106     0098                     OSCTUNE         equ	152	;# 
   107     0099                     OSCCON          equ	153	;# 
   108     009A                     OSCSTAT         equ	154	;# 
   109     009B                     ADRES           equ	155	;# 
   110     009B                     ADRESL          equ	155	;# 
   111     009C                     ADRESH          equ	156	;# 
   112     009D                     ADCON0          equ	157	;# 
   113     009E                     ADCON1          equ	158	;# 
   114     009F                     ADCON2          equ	159	;# 
   115     010C                     LATA            equ	268	;# 
   116     010D                     LATB            equ	269	;# 
   117     010E                     LATC            equ	270	;# 
   118     010F                     LATD            equ	271	;# 
   119     0110                     LATE            equ	272	;# 
   120     0111                     CM1CON0         equ	273	;# 
   121     0112                     CM1CON1         equ	274	;# 
   122     0113                     CM2CON0         equ	275	;# 
   123     0114                     CM2CON1         equ	276	;# 
   124     0115                     CMOUT           equ	277	;# 
   125     0116                     BORCON          equ	278	;# 
   126     0117                     FVRCON          equ	279	;# 
   127     0118                     DAC1CON0        equ	280	;# 
   128     0119                     DAC1CON1        equ	281	;# 
   129     011A                     DAC2CON0        equ	282	;# 
   130     011B                     DAC2REF         equ	283	;# 
   131     011B                     DAC2CON1        equ	283	;# 
   132     011C                     ZCD1CON         equ	284	;# 
   133     018C                     ANSELA          equ	396	;# 
   134     018D                     ANSELB          equ	397	;# 
   135     018E                     ANSELC          equ	398	;# 
   136     018F                     ANSELD          equ	399	;# 
   137     0190                     ANSELE          equ	400	;# 
   138     0191                     PMADR           equ	401	;# 
   139     0191                     PMADRL          equ	401	;# 
   140     0192                     PMADRH          equ	402	;# 
   141     0193                     PMDAT           equ	403	;# 
   142     0193                     PMDATL          equ	403	;# 
   143     0194                     PMDATH          equ	404	;# 
   144     0195                     PMCON1          equ	405	;# 
   145     0196                     PMCON2          equ	406	;# 
   146     0197                     VREGCON         equ	407	;# 
   147     0199                     RC1REG          equ	409	;# 
   148     0199                     RCREG           equ	409	;# 
   149     0199                     RCREG1          equ	409	;# 
   150     019A                     TX1REG          equ	410	;# 
   151     019A                     TXREG1          equ	410	;# 
   152     019A                     TXREG           equ	410	;# 
   153     019B                     SP1BRG          equ	411	;# 
   154     019B                     SPBRG           equ	411	;# 
   155     019B                     SP1BRGL         equ	411	;# 
   156     019B                     SPBRG1          equ	411	;# 
   157     019B                     SPBRGL          equ	411	;# 
   158     019C                     SP1BRGH         equ	412	;# 
   159     019C                     SPBRGH          equ	412	;# 
   160     019C                     SPBRGH1         equ	412	;# 
   161     019D                     RC1STA          equ	413	;# 
   162     019D                     RCSTA1          equ	413	;# 
   163     019D                     RCSTA           equ	413	;# 
   164     019E                     TX1STA          equ	414	;# 
   165     019E                     TXSTA1          equ	414	;# 
   166     019E                     TXSTA           equ	414	;# 
   167     019F                     BAUD1CON        equ	415	;# 
   168     019F                     BAUDCON1        equ	415	;# 
   169     019F                     BAUDCTL1        equ	415	;# 
   170     019F                     BAUDCON         equ	415	;# 
   171     019F                     BAUDCTL         equ	415	;# 
   172     020C                     WPUA            equ	524	;# 
   173     020D                     WPUB            equ	525	;# 
   174     020E                     WPUC            equ	526	;# 
   175     020F                     WPUD            equ	527	;# 
   176     0210                     WPUE            equ	528	;# 
   177     0211                     SSP1BUF         equ	529	;# 
   178     0211                     SSPBUF          equ	529	;# 
   179     0212                     SSP1ADD         equ	530	;# 
   180     0212                     SSPADD          equ	530	;# 
   181     0213                     SSP1MSK         equ	531	;# 
   182     0213                     SSPMSK          equ	531	;# 
   183     0214                     SSP1STAT        equ	532	;# 
   184     0214                     SSPSTAT         equ	532	;# 
   185     0215                     SSP1CON1        equ	533	;# 
   186     0215                     SSPCON          equ	533	;# 
   187     0215                     SSPCON1         equ	533	;# 
   188     0215                     SSP1CON         equ	533	;# 
   189     0216                     SSP1CON2        equ	534	;# 
   190     0216                     SSPCON2         equ	534	;# 
   191     0217                     SSP1CON3        equ	535	;# 
   192     0217                     SSPCON3         equ	535	;# 
   193     028C                     ODCONA          equ	652	;# 
   194     028D                     ODCONB          equ	653	;# 
   195     028E                     ODCONC          equ	654	;# 
   196     028F                     ODCOND          equ	655	;# 
   197     0290                     ODCONE          equ	656	;# 
   198     0291                     CCPR1           equ	657	;# 
   199     0291                     CCPR1L          equ	657	;# 
   200     0292                     CCPR1H          equ	658	;# 
   201     0293                     CCP1CON         equ	659	;# 
   202     0293                     ECCP1CON        equ	659	;# 
   203     0298                     CCPR2           equ	664	;# 
   204     0298                     CCPR2L          equ	664	;# 
   205     0299                     CCPR2H          equ	665	;# 
   206     029A                     CCP2CON         equ	666	;# 
   207     029A                     ECCP2CON        equ	666	;# 
   208     029E                     CCPTMRS         equ	670	;# 
   209     030C                     SLRCONA         equ	780	;# 
   210     030D                     SLRCONB         equ	781	;# 
   211     030E                     SLRCONC         equ	782	;# 
   212     030F                     SLRCOND         equ	783	;# 
   213     0310                     SLRCONE         equ	784	;# 
   214     038C                     INLVLA          equ	908	;# 
   215     038D                     INLVLB          equ	909	;# 
   216     038E                     INLVLC          equ	910	;# 
   217     038F                     INLVLD          equ	911	;# 
   218     0390                     INLVLE          equ	912	;# 
   219     0391                     IOCAP           equ	913	;# 
   220     0392                     IOCAN           equ	914	;# 
   221     0393                     IOCAF           equ	915	;# 
   222     0394                     IOCBP           equ	916	;# 
   223     0395                     IOCBN           equ	917	;# 
   224     0396                     IOCBF           equ	918	;# 
   225     0397                     IOCCP           equ	919	;# 
   226     0398                     IOCCN           equ	920	;# 
   227     0399                     IOCCF           equ	921	;# 
   228     039D                     IOCEP           equ	925	;# 
   229     039E                     IOCEN           equ	926	;# 
   230     039F                     IOCEF           equ	927	;# 
   231     0415                     TMR4            equ	1045	;# 
   232     0416                     PR4             equ	1046	;# 
   233     0417                     T4CON           equ	1047	;# 
   234     041C                     TMR6            equ	1052	;# 
   235     041D                     PR6             equ	1053	;# 
   236     041E                     T6CON           equ	1054	;# 
   237     0498                     NCO1ACC         equ	1176	;# 
   238     0498                     NCO1ACCL        equ	1176	;# 
   239     0499                     NCO1ACCH        equ	1177	;# 
   240     049A                     NCO1ACCU        equ	1178	;# 
   241     049B                     NCO1INC         equ	1179	;# 
   242     049B                     NCO1INCL        equ	1179	;# 
   243     049C                     NCO1INCH        equ	1180	;# 
   244     049D                     NCO1INCU        equ	1181	;# 
   245     049E                     NCO1CON         equ	1182	;# 
   246     049F                     NCO1CLK         equ	1183	;# 
   247     0511                     OPA1CON         equ	1297	;# 
   248     0515                     OPA2CON         equ	1301	;# 
   249     0617                     PWM3DCL         equ	1559	;# 
   250     0618                     PWM3DCH         equ	1560	;# 
   251     0619                     PWM3CON         equ	1561	;# 
   252     0619                     PWM3CON0        equ	1561	;# 
   253     061A                     PWM4DCL         equ	1562	;# 
   254     061B                     PWM4DCH         equ	1563	;# 
   255     061C                     PWM4CON         equ	1564	;# 
   256     061C                     PWM4CON0        equ	1564	;# 
   257     0691                     COG1PHR         equ	1681	;# 
   258     0692                     COG1PHF         equ	1682	;# 
   259     0693                     COG1BLKR        equ	1683	;# 
   260     0694                     COG1BLKF        equ	1684	;# 
   261     0695                     COG1DBR         equ	1685	;# 
   262     0696                     COG1DBF         equ	1686	;# 
   263     0697                     COG1CON0        equ	1687	;# 
   264     0698                     COG1CON1        equ	1688	;# 
   265     0699                     COG1RIS         equ	1689	;# 
   266     069A                     COG1RSIM        equ	1690	;# 
   267     069B                     COG1FIS         equ	1691	;# 
   268     069C                     COG1FSIM        equ	1692	;# 
   269     069D                     COG1ASD0        equ	1693	;# 
   270     069E                     COG1ASD1        equ	1694	;# 
   271     069F                     COG1STR         equ	1695	;# 
   272     0E0F                     PPSLOCK         equ	3599	;# 
   273     0E10                     INTPPS          equ	3600	;# 
   274     0E11                     T0CKIPPS        equ	3601	;# 
   275     0E12                     T1CKIPPS        equ	3602	;# 
   276     0E13                     T1GPPS          equ	3603	;# 
   277     0E14                     CCP1PPS         equ	3604	;# 
   278     0E15                     CCP2PPS         equ	3605	;# 
   279     0E17                     COGINPPS        equ	3607	;# 
   280     0E20                     SSPCLKPPS       equ	3616	;# 
   281     0E21                     SSPDATPPS       equ	3617	;# 
   282     0E22                     SSPSSPPS        equ	3618	;# 
   283     0E24                     RXPPS           equ	3620	;# 
   284     0E25                     CKPPS           equ	3621	;# 
   285     0E28                     CLCIN0PPS       equ	3624	;# 
   286     0E29                     CLCIN1PPS       equ	3625	;# 
   287     0E2A                     CLCIN2PPS       equ	3626	;# 
   288     0E2B                     CLCIN3PPS       equ	3627	;# 
   289     0E90                     RA0PPS          equ	3728	;# 
   290     0E91                     RA1PPS          equ	3729	;# 
   291     0E92                     RA2PPS          equ	3730	;# 
   292     0E93                     RA3PPS          equ	3731	;# 
   293     0E94                     RA4PPS          equ	3732	;# 
   294     0E95                     RA5PPS          equ	3733	;# 
   295     0E96                     RA6PPS          equ	3734	;# 
   296     0E97                     RA7PPS          equ	3735	;# 
   297     0E98                     RB0PPS          equ	3736	;# 
   298     0E99                     RB1PPS          equ	3737	;# 
   299     0E9A                     RB2PPS          equ	3738	;# 
   300     0E9B                     RB3PPS          equ	3739	;# 
   301     0E9C                     RB4PPS          equ	3740	;# 
   302     0E9D                     RB5PPS          equ	3741	;# 
   303     0E9E                     RB6PPS          equ	3742	;# 
   304     0E9F                     RB7PPS          equ	3743	;# 
   305     0EA0                     RC0PPS          equ	3744	;# 
   306     0EA1                     RC1PPS          equ	3745	;# 
   307     0EA2                     RC2PPS          equ	3746	;# 
   308     0EA3                     RC3PPS          equ	3747	;# 
   309     0EA4                     RC4PPS          equ	3748	;# 
   310     0EA5                     RC5PPS          equ	3749	;# 
   311     0EA6                     RC6PPS          equ	3750	;# 
   312     0EA7                     RC7PPS          equ	3751	;# 
   313     0EA8                     RD0PPS          equ	3752	;# 
   314     0EA9                     RD1PPS          equ	3753	;# 
   315     0EAA                     RD2PPS          equ	3754	;# 
   316     0EAB                     RD3PPS          equ	3755	;# 
   317     0EAC                     RD4PPS          equ	3756	;# 
   318     0EAD                     RD5PPS          equ	3757	;# 
   319     0EAE                     RD6PPS          equ	3758	;# 
   320     0EAF                     RD7PPS          equ	3759	;# 
   321     0EB0                     RE0PPS          equ	3760	;# 
   322     0EB1                     RE1PPS          equ	3761	;# 
   323     0EB2                     RE2PPS          equ	3762	;# 
   324     0F0F                     CLCDATA         equ	3855	;# 
   325     0F10                     CLC1CON         equ	3856	;# 
   326     0F11                     CLC1POL         equ	3857	;# 
   327     0F12                     CLC1SEL0        equ	3858	;# 
   328     0F13                     CLC1SEL1        equ	3859	;# 
   329     0F14                     CLC1SEL2        equ	3860	;# 
   330     0F15                     CLC1SEL3        equ	3861	;# 
   331     0F16                     CLC1GLS0        equ	3862	;# 
   332     0F17                     CLC1GLS1        equ	3863	;# 
   333     0F18                     CLC1GLS2        equ	3864	;# 
   334     0F19                     CLC1GLS3        equ	3865	;# 
   335     0F1A                     CLC2CON         equ	3866	;# 
   336     0F1B                     CLC2POL         equ	3867	;# 
   337     0F1C                     CLC2SEL0        equ	3868	;# 
   338     0F1D                     CLC2SEL1        equ	3869	;# 
   339     0F1E                     CLC2SEL2        equ	3870	;# 
   340     0F1F                     CLC2SEL3        equ	3871	;# 
   341     0F20                     CLC2GLS0        equ	3872	;# 
   342     0F21                     CLC2GLS1        equ	3873	;# 
   343     0F22                     CLC2GLS2        equ	3874	;# 
   344     0F23                     CLC2GLS3        equ	3875	;# 
   345     0F24                     CLC3CON         equ	3876	;# 
   346     0F25                     CLC3POL         equ	3877	;# 
   347     0F26                     CLC3SEL0        equ	3878	;# 
   348     0F27                     CLC3SEL1        equ	3879	;# 
   349     0F28                     CLC3SEL2        equ	3880	;# 
   350     0F29                     CLC3SEL3        equ	3881	;# 
   351     0F2A                     CLC3GLS0        equ	3882	;# 
   352     0F2B                     CLC3GLS1        equ	3883	;# 
   353     0F2C                     CLC3GLS2        equ	3884	;# 
   354     0F2D                     CLC3GLS3        equ	3885	;# 
   355     0F2E                     CLC4CON         equ	3886	;# 
   356     0F2F                     CLC4POL         equ	3887	;# 
   357     0F30                     CLC4SEL0        equ	3888	;# 
   358     0F31                     CLC4SEL1        equ	3889	;# 
   359     0F32                     CLC4SEL2        equ	3890	;# 
   360     0F33                     CLC4SEL3        equ	3891	;# 
   361     0F34                     CLC4GLS0        equ	3892	;# 
   362     0F35                     CLC4GLS1        equ	3893	;# 
   363     0F36                     CLC4GLS2        equ	3894	;# 
   364     0F37                     CLC4GLS3        equ	3895	;# 
   365     0FE4                     STATUS_SHAD     equ	4068	;# 
   366     0FE5                     WREG_SHAD       equ	4069	;# 
   367     0FE6                     BSR_SHAD        equ	4070	;# 
   368     0FE7                     PCLATH_SHAD     equ	4071	;# 
   369     0FE8                     FSR0L_SHAD      equ	4072	;# 
   370     0FE9                     FSR0H_SHAD      equ	4073	;# 
   371     0FEA                     FSR1L_SHAD      equ	4074	;# 
   372     0FEB                     FSR1H_SHAD      equ	4075	;# 
   373     0FED                     STKPTR          equ	4077	;# 
   374     0FEE                     TOSL            equ	4078	;# 
   375     0FEF                     TOSH            equ	4079	;# 
   376                           
   377                           	psect	idataCOMMON
   378     0098                     __pidataCOMMON:
   379                           
   380                           ;initializer for _direction
   381     0098  3401               	retlw	1
   382     0099  3400               	retlw	0
   383     0011                     _PIR1bits       set	17
   384     000B                     _INTCONbits     set	11
   385     001C                     _T2CONbits      set	28
   386     001B                     _PR2            set	27
   387     0091                     _PIE1bits       set	145
   388     008F                     _TRISD          set	143
   389     010F                     _LATD           set	271
   390     061C                     _PWM4CON        set	1564
   391     061A                     _PWM4DCL        set	1562
   392     061B                     _PWM4DCH        set	1563
   393     0EA8                     _RD0PPS         set	3752
   394                           
   395                           	psect	cinit
   396     0046                     start_initialization:	
   397                           ; #config settings
   398                           
   399     0046                     __initialization:
   400                           
   401                           ; Initialize objects allocated to COMMON
   402     0046  3180  2098  3180   	fcall	__pidataCOMMON	;fetch initializer
   403     0049  00F7               	movwf	__pdataCOMMON& (0+127)
   404     004A  3180  2099  3180   	fcall	__pidataCOMMON+1	;fetch initializer
   405     004D  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   406                           
   407                           ; Clear objects allocated to COMMON
   408     004E  01F0               	clrf	__pbssCOMMON& (0+127)
   409     004F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   410     0050  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   411     0051  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   412     0052  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   413     0053  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   414     0054  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   415     0055                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418     0055                     __end_of__initialization:
   419     0055  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   420     0056  0020               	movlb	0
   421     0057  3180  287D         	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssCOMMON
   424     0070                     __pbssCOMMON:
   425     0070                     _nb_flag:
   426     0070                     	ds	2
   427     0072                     _level:
   428     0072                     	ds	2
   429     0074                     _interruptCounter:
   430     0074                     	ds	2
   431     0076                     _position:
   432     0076                     	ds	1
   433                           
   434                           	psect	dataCOMMON
   435     0077                     __pdataCOMMON:
   436     0077                     _direction:
   437     0077                     	ds	2
   438                           
   439                           	psect	cstackCOMMON
   440     0079                     __pcstackCOMMON:
   441     0079                     ?_setupLEDS:
   442     0079                     ?_setupTimer:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0079                     ?_setupPWM:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0079                     ?_updatePWM:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0079                     ?_ISR:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0079                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0079                     ??_updatePWM:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 1 bytes @ 0x0
   462     0079                     	ds	2
   463     007B                     ??_setupLEDS:
   464     007B                     ??_setupTimer:	
   465                           ; 1 bytes @ 0x2
   466                           
   467     007B                     ??_setupPWM:	
   468                           ; 1 bytes @ 0x2
   469                           
   470     007B                     ??_ISR:	
   471                           ; 1 bytes @ 0x2
   472                           
   473     007B                     ??_main:	
   474                           ; 1 bytes @ 0x2
   475                           
   476                           
   477                           	psect	maintext
   478     007D                     __pmaintext:	
   479                           ; 1 bytes @ 0x2
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 90 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : B1F/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		_setupLEDS
   507 ;;		_setupPWM
   508 ;;		_setupTimer
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514     007D                     _main:	
   515                           ;psect for function _main
   516                           
   517     007D                     l633:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 91:     setupLEDS();
   523     007D  3180  2093  3180   	fcall	_setupLEDS
   524                           
   525                           ;main.c: 92:     setupPWM();
   526     0080  3180  2089  3180   	fcall	_setupPWM
   527     0083                     l635:
   528                           
   529                           ;main.c: 93:     setupTimer();
   530     0083  3180  206E  3180   	fcall	_setupTimer
   531     0086                     l60:	
   532                           ;main.c: 94:     while(1){
   533                           
   534     0086                     l61:	
   535                           ;main.c: 96:     }
   536                           
   537     0086  2886               	goto	l60
   538     0087  3180  2844         	ljmp	start
   539     0089                     __end_of_main:
   540                           
   541                           	psect	text1
   542     006E                     __ptext1:	
   543 ;; *************** function _setupTimer *****************
   544 ;; Defined at:
   545 ;;		line 25 in file "main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; Hardware stack levels required when called: 2
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573     006E                     _setupTimer:	
   574                           ;psect for function _setupTimer
   575                           
   576     006E                     l591:	
   577                           ;incstack = 0
   578                           ; Regs used in _setupTimer: [wreg+status,2+status,0]
   579                           
   580                           
   581                           ;main.c: 27:     PR2 = 249;
   582     006E  30F9               	movlw	249
   583     006F  0020               	movlb	0	; select bank0
   584     0070  009B               	movwf	27	;volatile
   585     0071                     l593:
   586                           
   587                           ;main.c: 28:     T2CONbits.T2CKPS = 0b10;
   588     0071  081C               	movf	28,w	;volatile
   589     0072  39FC               	andlw	-4
   590     0073  3802               	iorlw	2
   591     0074  009C               	movwf	28	;volatile
   592                           
   593                           ;main.c: 29:     T2CONbits.T2OUTPS = 0b00;
   594     0075  3087               	movlw	-121
   595     0076  059C               	andwf	28,f	;volatile
   596     0077                     l595:
   597                           
   598                           ;main.c: 30:     T2CONbits.TMR2ON = 1;
   599     0077  151C               	bsf	28,2	;volatile
   600     0078                     l597:
   601                           
   602                           ;main.c: 34:     PIE1bits.TMR2IE = 1;
   603     0078  0021               	movlb	1	; select bank1
   604     0079  1491               	bsf	17,1	;volatile
   605     007A                     l599:
   606                           
   607                           ;main.c: 35:     INTCONbits.PEIE = 1;
   608     007A  170B               	bsf	11,6	;volatile
   609     007B                     l601:
   610                           
   611                           ;main.c: 36:     INTCONbits.GIE = 1;
   612     007B  178B               	bsf	11,7	;volatile
   613     007C                     l38:
   614     007C  0008               	return
   615     007D                     __end_of_setupTimer:
   616                           
   617                           	psect	text2
   618     0089                     __ptext2:	
   619 ;; *************** function _setupPWM *****************
   620 ;; Defined at:
   621 ;;		line 39 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649     0089                     _setupPWM:	
   650                           ;psect for function _setupPWM
   651                           
   652     0089                     l603:	
   653                           ;incstack = 0
   654                           ; Regs used in _setupPWM: [status,2]
   655                           
   656                           
   657                           ;main.c: 41:     RD0PPS = 0b00001111;
   658     0089  300F               	movlw	15
   659     008A  003D               	movlb	29	; select bank29
   660     008B  00A8               	movwf	40	;volatile
   661                           
   662                           ;main.c: 44:     PWM4DCH = 0xff;
   663     008C  30FF               	movlw	255
   664     008D  002C               	movlb	12	; select bank12
   665     008E  009B               	movwf	27	;volatile
   666     008F                     l605:
   667                           
   668                           ;main.c: 45:     PWM4DCL = 0;
   669     008F  019A               	clrf	26	;volatile
   670     0090                     l607:
   671                           
   672                           ;main.c: 48:     PWM4CON = 0b11000000;
   673     0090  30C0               	movlw	192
   674     0091  009C               	movwf	28	;volatile
   675     0092                     l41:
   676     0092  0008               	return
   677     0093                     __end_of_setupPWM:
   678                           
   679                           	psect	text3
   680     0093                     __ptext3:	
   681 ;; *************** function _setupLEDS *****************
   682 ;; Defined at:
   683 ;;		line 19 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		status,2
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 2
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711     0093                     _setupLEDS:	
   712                           ;psect for function _setupLEDS
   713                           
   714     0093                     l589:	
   715                           ;incstack = 0
   716                           ; Regs used in _setupLEDS: [status,2]
   717                           
   718                           
   719                           ;main.c: 20:     TRISD = 0b00;
   720     0093  0021               	movlb	1	; select bank1
   721     0094  018F               	clrf	15	;volatile
   722                           
   723                           ;main.c: 21:     LATD = 0b0000;
   724     0095  0022               	movlb	2	; select bank2
   725     0096  018F               	clrf	15	;volatile
   726     0097                     l35:
   727     0097  0008               	return
   728     0098                     __end_of_setupLEDS:
   729                           
   730                           	psect	intentry
   731     0004                     __pintentry:	
   732 ;; *************** function _ISR *****************
   733 ;; Defined at:
   734 ;;		line 61 in file "main.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   752 ;;Total ram usage:        0 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; Hardware stack levels required when called: 1
   755 ;; This function calls:
   756 ;;		_updatePWM
   757 ;; This function is called by:
   758 ;;		Interrupt level 1
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762     0004                     _ISR:
   763                           
   764                           ;incstack = 0
   765     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   766                           
   767                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   768     0005  3180               	pagesel	$
   769     0006                     i1l611:
   770                           
   771                           ;main.c: 62:     if (PIR1bits.TMR2IF) {
   772     0006  0020               	movlb	0	; select bank0
   773     0007  1C91               	btfss	17,1	;volatile
   774     0008  280A               	goto	u2_21
   775     0009  280B               	goto	u2_20
   776     000A                     u2_21:
   777     000A  2842               	goto	i1l55
   778     000B                     u2_20:
   779     000B                     i1l613:
   780                           
   781                           ;main.c: 64:         PIR1bits.TMR2IF = 0;
   782     000B  1091               	bcf	17,1	;volatile
   783     000C                     i1l615:
   784                           
   785                           ;main.c: 67:         interruptCounter++;
   786     000C  3001               	movlw	1
   787     000D  07F4               	addwf	_interruptCounter,f	;volatile
   788     000E  3000               	movlw	0
   789     000F  3DF5               	addwfc	_interruptCounter+1,f	;volatile
   790                           
   791                           ;main.c: 70:         if (interruptCounter >= 2) {
   792     0010  3000               	movlw	0
   793     0011  0275               	subwf	_interruptCounter+1,w	;volatile
   794     0012  3002               	movlw	2
   795     0013  1903               	skipnz
   796     0014  0274               	subwf	_interruptCounter,w	;volatile
   797     0015  1C03               	skipc
   798     0016  2818               	goto	u3_21
   799     0017  2819               	goto	u3_20
   800     0018                     u3_21:
   801     0018  2842               	goto	i1l55
   802     0019                     u3_20:
   803     0019                     i1l617:
   804                           
   805                           ;main.c: 71:             interruptCounter = 0;
   806     0019  01F4               	clrf	_interruptCounter	;volatile
   807     001A  01F5               	clrf	_interruptCounter+1	;volatile
   808     001B                     i1l619:
   809                           
   810                           ;main.c: 73:             if (direction) {
   811     001B  0877               	movf	_direction,w	;volatile
   812     001C  0478               	iorwf	_direction+1,w	;volatile
   813     001D  1903               	btfsc	3,2
   814     001E  2820               	goto	u4_21
   815     001F  2821               	goto	u4_20
   816     0020                     u4_21:
   817     0020  2831               	goto	i1l625
   818     0021                     u4_20:
   819     0021                     i1l621:
   820                           
   821                           ;main.c: 74:                 level++;
   822     0021  3001               	movlw	1
   823     0022  07F2               	addwf	_level,f	;volatile
   824     0023  3000               	movlw	0
   825     0024  3DF3               	addwfc	_level+1,f	;volatile
   826                           
   827                           ;main.c: 75:                 if (level >= 255) {
   828     0025  3000               	movlw	0
   829     0026  0273               	subwf	_level+1,w	;volatile
   830     0027  30FF               	movlw	255
   831     0028  1903               	skipnz
   832     0029  0272               	subwf	_level,w	;volatile
   833     002A  1C03               	skipc
   834     002B  282D               	goto	u5_21
   835     002C  282E               	goto	u5_20
   836     002D                     u5_21:
   837     002D  283F               	goto	i1l631
   838     002E                     u5_20:
   839     002E                     i1l623:
   840                           
   841                           ;main.c: 76:                     direction = 0;
   842     002E  01F7               	clrf	_direction	;volatile
   843     002F  01F8               	clrf	_direction+1	;volatile
   844     0030  283F               	goto	i1l631
   845     0031                     i1l625:
   846                           
   847                           ;main.c: 79:                 level--;
   848     0031  3001               	movlw	1
   849     0032  02F2               	subwf	_level,f	;volatile
   850     0033  3000               	movlw	0
   851     0034  3BF3               	subwfb	_level+1,f	;volatile
   852     0035                     i1l627:
   853                           
   854                           ;main.c: 80:                 if (level == 0) {
   855     0035  0872               	movf	_level,w	;volatile
   856     0036  0473               	iorwf	_level+1,w	;volatile
   857     0037  1D03               	btfss	3,2
   858     0038  283A               	goto	u6_21
   859     0039  283B               	goto	u6_20
   860     003A                     u6_21:
   861     003A  283F               	goto	i1l631
   862     003B                     u6_20:
   863     003B                     i1l629:
   864                           
   865                           ;main.c: 81:                     direction = 1;
   866     003B  3001               	movlw	1
   867     003C  00F7               	movwf	_direction	;volatile
   868     003D  3000               	movlw	0
   869     003E  00F8               	movwf	_direction+1	;volatile
   870     003F                     i1l631:
   871                           
   872                           ;main.c: 85:             updatePWM();
   873     003F  3180  2059  3180   	fcall	_updatePWM
   874     0042                     i1l55:
   875     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   876     0043  0009               	retfie
   877     0044                     __end_of_ISR:
   878                           
   879                           	psect	text5
   880     0059                     __ptext5:	
   881 ;; *************** function _updatePWM *****************
   882 ;; Defined at:
   883 ;;		line 54 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_ISR
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     0059                     _updatePWM:	
   911                           ;psect for function _updatePWM
   912                           
   913     0059                     i1l609:	
   914                           ;incstack = 0
   915                           ; Regs used in _updatePWM: [wreg+status,2+status,0]
   916                           
   917                           
   918                           ;main.c: 56:     PWM4DCH = level >> 2;
   919     0059  0873               	movf	_level+1,w	;volatile
   920     005A  00FA               	movwf	??_updatePWM+1
   921     005B  0872               	movf	_level,w	;volatile
   922     005C  00F9               	movwf	??_updatePWM
   923     005D  36FA               	lsrf	??_updatePWM+1,f
   924     005E  0CF9               	rrf	??_updatePWM,f
   925     005F  36FA               	lsrf	??_updatePWM+1,f
   926     0060  0CF9               	rrf	??_updatePWM,f
   927     0061  0879               	movf	??_updatePWM,w
   928     0062  002C               	movlb	12	; select bank12
   929     0063  009B               	movwf	27	;volatile
   930                           
   931                           ;main.c: 57:     PWM4DCL = (level & 0x03) << 6;
   932     0064  0872               	movf	_level,w	;volatile
   933     0065  3903               	andlw	3
   934     0066  00F9               	movwf	??_updatePWM
   935     0067  3006               	movlw	6
   936     0068                     u1_25:
   937     0068  35F9               	lslf	??_updatePWM,f
   938     0069  0B89               	decfsz	9,f
   939     006A  2868               	goto	u1_25
   940     006B  0879               	movf	??_updatePWM,w
   941     006C  009A               	movwf	26	;volatile
   942     006D                     i1l44:
   943     006D  0008               	return
   944     006E                     __end_of_updatePWM:
   945     0003                     ___latbits      equ	3
   946     007E                     btemp           set	126	;btemp
   947     007E                     int$flags       set	126
   948     007E                     wtemp0          set	126
   949                           
   950                           	psect	config
   951                           
   952                           ;Config register CONFIG1 @ 0x8007
   953                           ;	Oscillator Selection Bits
   954                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
   955                           ;	Watchdog Timer Enable
   956                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
   957                           ;	Power-up Timer Enable
   958                           ;	PWRTE = OFF, PWRT disabled
   959                           ;	MCLR Pin Function Select
   960                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   961                           ;	Flash Program Memory Code Protection
   962                           ;	CP = OFF, Program memory code protection is disabled
   963                           ;	Brown-out Reset Enable
   964                           ;	BOREN = ON, Brown-out Reset enabled
   965                           ;	Clock Out Enable
   966                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   967                           ;	Internal/External Switchover Mode
   968                           ;	IESO = ON, Internal/External Switchover Mode is enabled
   969                           ;	Fail-Safe Clock Monitor Enable
   970                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   971     8007                     	org	32775
   972     8007  3FEA               	dw	16362
   973                           
   974                           ;Config register CONFIG2 @ 0x8008
   975                           ;	Flash Memory Self-Write Protection
   976                           ;	WRT = OFF, Write protection off
   977                           ;	Peripheral Pin Select one-way control
   978                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
   979                           ;	Zero-cross detect disable
   980                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   981                           ;	Phase Lock Loop enable
   982                           ;	PLLEN = OFF, 4x PLL is disabled
   983                           ;	Stack Overflow/Underflow Reset Enable
   984                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   985                           ;	Brown-out Reset Voltage Selection
   986                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   987                           ;	Low-Power Brown Out Reset
   988                           ;	LPBOR = OFF, Low-Power BOR is disabled
   989                           ;	In-Circuit Debugger Mode
   990                           ;	DEBUG = 0x1, unprogrammed default
   991                           ;	Low-Voltage Programming Enable
   992                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   993     8008                     	org	32776
   994     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_updatePWM

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _setupLEDS
                           _setupPWM
                         _setupTimer
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLEDS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
                          _updatePWM
 ---------------------------------------------------------------------------------
 (3) _updatePWM                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupLEDS
   _setupPWM
   _setupTimer

 _ISR (ROOT)
   _updatePWM

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      2      11     78.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      11      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Feb 19 20:52:28 2025

                     l41 0092                       l35 0097                       l60 0086  
                     l61 0086                       l38 007C                      l601 007B  
                    l603 0089                      l605 008F                      l607 0090  
                    l633 007D                      l635 0083                      l591 006E  
                    l593 0071                      l595 0077                      l589 0093  
                    l597 0078                      l599 007A                      _PR2 001B  
                    _ISR 0004                      wreg 0009                     ?_ISR 0079  
                   _LATD 010F                     i1l44 006D                     i1l55 0042  
                   u1_25 0068                     u2_20 000B                     u2_21 000A  
                   u3_20 0019                     u3_21 0018                     u4_20 0021  
                   u4_21 0020                     u5_20 002E                     u5_21 002D  
                   u6_20 003B                     u6_21 003A                     _main 007D  
                   btemp 007E                     start 0044                    ??_ISR 007B  
                  ?_main 0079                    i1l611 0006                    i1l621 0021  
                  i1l613 000B                    i1l623 002E                    i1l631 003F  
                  i1l615 000C                    i1l609 0059                    i1l625 0031  
                  i1l617 0019                    i1l627 0035                    i1l619 001B  
                  i1l629 003B                    _TRISD 008F                    _level 0072  
                  status 0003                    wtemp0 007E          __initialization 0046  
           __end_of_main 0089                   ??_main 007B                   _RD0PPS 0EA8  
           __pdataCOMMON 0077         __end_of_setupPWM 0093  __end_of__initialization 0055  
         __pcstackCOMMON 0079               __pmaintext 007D               __pintentry 0004  
                _PWM4DCH 061B                  _PWM4DCL 061A                  _PWM4CON 061C  
              ?_setupPWM 0079                  __ptext1 006E                  __ptext2 0089  
                __ptext3 0093                  __ptext5 0059                  _nb_flag 0070  
              _T2CONbits 001C     end_of_initialization 0055        __end_of_setupLEDS 0098  
      __end_of_updatePWM 006E               ??_setupPWM 007B               _setupTimer 006E  
          __pidataCOMMON 0098      start_initialization 0046              __end_of_ISR 0044  
            ?_setupTimer 0079              __pbssCOMMON 0070                ___latbits 0003  
              _direction 0077                 _PIE1bits 0091                 _PIR1bits 0011  
              _setupLEDS 0093                _updatePWM 0059               ?_setupLEDS 0079  
             ?_updatePWM 0079         _interruptCounter 0074                 _setupPWM 0089  
               int$flags 007E                 _position 0076             ??_setupTimer 007B  
             _INTCONbits 000B                 intlevel1 0000       __end_of_setupTimer 007D  
            ??_setupLEDS 007B              ??_updatePWM 0079  
