

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Feb 19 20:50:55 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 07/09/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1719 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0008                     bsr             equ	8
    50     0005                     fsr0h           equ	5
    51     0004                     fsr0l           equ	4
    52     0007                     fsr1h           equ	7
    53     0006                     fsr1l           equ	6
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0001                     indf1           equ	1
    57     000B                     intcon          equ	11
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0009                     wreg            equ	9
    63     0000                     INDF0           equ	0	;# 
    64     0001                     INDF1           equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR0L           equ	4	;# 
    68     0005                     FSR0H           equ	5	;# 
    69     0006                     FSR1L           equ	6	;# 
    70     0007                     FSR1H           equ	7	;# 
    71     0008                     BSR             equ	8	;# 
    72     0009                     WREG            equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PORTA           equ	12	;# 
    76     000D                     PORTB           equ	13	;# 
    77     000E                     PORTC           equ	14	;# 
    78     000F                     PORTD           equ	15	;# 
    79     0010                     PORTE           equ	16	;# 
    80     0011                     PIR1            equ	17	;# 
    81     0012                     PIR2            equ	18	;# 
    82     0013                     PIR3            equ	19	;# 
    83     0015                     TMR0            equ	21	;# 
    84     0016                     TMR1            equ	22	;# 
    85     0016                     TMR1L           equ	22	;# 
    86     0017                     TMR1H           equ	23	;# 
    87     0018                     T1CON           equ	24	;# 
    88     0019                     T1GCON          equ	25	;# 
    89     001A                     TMR2            equ	26	;# 
    90     001B                     PR2             equ	27	;# 
    91     001C                     T2CON           equ	28	;# 
    92     008C                     TRISA           equ	140	;# 
    93     008D                     TRISB           equ	141	;# 
    94     008E                     TRISC           equ	142	;# 
    95     008F                     TRISD           equ	143	;# 
    96     0090                     TRISE           equ	144	;# 
    97     0091                     PIE1            equ	145	;# 
    98     0092                     PIE2            equ	146	;# 
    99     0093                     PIE3            equ	147	;# 
   100     0095                     OPTION_REG      equ	149	;# 
   101     0096                     PCON            equ	150	;# 
   102     0097                     WDTCON          equ	151	;# 
   103     0098                     OSCTUNE         equ	152	;# 
   104     0099                     OSCCON          equ	153	;# 
   105     009A                     OSCSTAT         equ	154	;# 
   106     009B                     ADRES           equ	155	;# 
   107     009B                     ADRESL          equ	155	;# 
   108     009C                     ADRESH          equ	156	;# 
   109     009D                     ADCON0          equ	157	;# 
   110     009E                     ADCON1          equ	158	;# 
   111     009F                     ADCON2          equ	159	;# 
   112     010C                     LATA            equ	268	;# 
   113     010D                     LATB            equ	269	;# 
   114     010E                     LATC            equ	270	;# 
   115     010F                     LATD            equ	271	;# 
   116     0110                     LATE            equ	272	;# 
   117     0111                     CM1CON0         equ	273	;# 
   118     0112                     CM1CON1         equ	274	;# 
   119     0113                     CM2CON0         equ	275	;# 
   120     0114                     CM2CON1         equ	276	;# 
   121     0115                     CMOUT           equ	277	;# 
   122     0116                     BORCON          equ	278	;# 
   123     0117                     FVRCON          equ	279	;# 
   124     0118                     DAC1CON0        equ	280	;# 
   125     0119                     DAC1CON1        equ	281	;# 
   126     011A                     DAC2CON0        equ	282	;# 
   127     011B                     DAC2REF         equ	283	;# 
   128     011B                     DAC2CON1        equ	283	;# 
   129     011C                     ZCD1CON         equ	284	;# 
   130     018C                     ANSELA          equ	396	;# 
   131     018D                     ANSELB          equ	397	;# 
   132     018E                     ANSELC          equ	398	;# 
   133     018F                     ANSELD          equ	399	;# 
   134     0190                     ANSELE          equ	400	;# 
   135     0191                     PMADR           equ	401	;# 
   136     0191                     PMADRL          equ	401	;# 
   137     0192                     PMADRH          equ	402	;# 
   138     0193                     PMDAT           equ	403	;# 
   139     0193                     PMDATL          equ	403	;# 
   140     0194                     PMDATH          equ	404	;# 
   141     0195                     PMCON1          equ	405	;# 
   142     0196                     PMCON2          equ	406	;# 
   143     0197                     VREGCON         equ	407	;# 
   144     0199                     RC1REG          equ	409	;# 
   145     0199                     RCREG           equ	409	;# 
   146     0199                     RCREG1          equ	409	;# 
   147     019A                     TX1REG          equ	410	;# 
   148     019A                     TXREG1          equ	410	;# 
   149     019A                     TXREG           equ	410	;# 
   150     019B                     SP1BRG          equ	411	;# 
   151     019B                     SPBRG           equ	411	;# 
   152     019B                     SP1BRGL         equ	411	;# 
   153     019B                     SPBRG1          equ	411	;# 
   154     019B                     SPBRGL          equ	411	;# 
   155     019C                     SP1BRGH         equ	412	;# 
   156     019C                     SPBRGH          equ	412	;# 
   157     019C                     SPBRGH1         equ	412	;# 
   158     019D                     RC1STA          equ	413	;# 
   159     019D                     RCSTA1          equ	413	;# 
   160     019D                     RCSTA           equ	413	;# 
   161     019E                     TX1STA          equ	414	;# 
   162     019E                     TXSTA1          equ	414	;# 
   163     019E                     TXSTA           equ	414	;# 
   164     019F                     BAUD1CON        equ	415	;# 
   165     019F                     BAUDCON1        equ	415	;# 
   166     019F                     BAUDCTL1        equ	415	;# 
   167     019F                     BAUDCON         equ	415	;# 
   168     019F                     BAUDCTL         equ	415	;# 
   169     020C                     WPUA            equ	524	;# 
   170     020D                     WPUB            equ	525	;# 
   171     020E                     WPUC            equ	526	;# 
   172     020F                     WPUD            equ	527	;# 
   173     0210                     WPUE            equ	528	;# 
   174     0211                     SSP1BUF         equ	529	;# 
   175     0211                     SSPBUF          equ	529	;# 
   176     0212                     SSP1ADD         equ	530	;# 
   177     0212                     SSPADD          equ	530	;# 
   178     0213                     SSP1MSK         equ	531	;# 
   179     0213                     SSPMSK          equ	531	;# 
   180     0214                     SSP1STAT        equ	532	;# 
   181     0214                     SSPSTAT         equ	532	;# 
   182     0215                     SSP1CON1        equ	533	;# 
   183     0215                     SSPCON          equ	533	;# 
   184     0215                     SSPCON1         equ	533	;# 
   185     0215                     SSP1CON         equ	533	;# 
   186     0216                     SSP1CON2        equ	534	;# 
   187     0216                     SSPCON2         equ	534	;# 
   188     0217                     SSP1CON3        equ	535	;# 
   189     0217                     SSPCON3         equ	535	;# 
   190     028C                     ODCONA          equ	652	;# 
   191     028D                     ODCONB          equ	653	;# 
   192     028E                     ODCONC          equ	654	;# 
   193     028F                     ODCOND          equ	655	;# 
   194     0290                     ODCONE          equ	656	;# 
   195     0291                     CCPR1           equ	657	;# 
   196     0291                     CCPR1L          equ	657	;# 
   197     0292                     CCPR1H          equ	658	;# 
   198     0293                     CCP1CON         equ	659	;# 
   199     0293                     ECCP1CON        equ	659	;# 
   200     0298                     CCPR2           equ	664	;# 
   201     0298                     CCPR2L          equ	664	;# 
   202     0299                     CCPR2H          equ	665	;# 
   203     029A                     CCP2CON         equ	666	;# 
   204     029A                     ECCP2CON        equ	666	;# 
   205     029E                     CCPTMRS         equ	670	;# 
   206     030C                     SLRCONA         equ	780	;# 
   207     030D                     SLRCONB         equ	781	;# 
   208     030E                     SLRCONC         equ	782	;# 
   209     030F                     SLRCOND         equ	783	;# 
   210     0310                     SLRCONE         equ	784	;# 
   211     038C                     INLVLA          equ	908	;# 
   212     038D                     INLVLB          equ	909	;# 
   213     038E                     INLVLC          equ	910	;# 
   214     038F                     INLVLD          equ	911	;# 
   215     0390                     INLVLE          equ	912	;# 
   216     0391                     IOCAP           equ	913	;# 
   217     0392                     IOCAN           equ	914	;# 
   218     0393                     IOCAF           equ	915	;# 
   219     0394                     IOCBP           equ	916	;# 
   220     0395                     IOCBN           equ	917	;# 
   221     0396                     IOCBF           equ	918	;# 
   222     0397                     IOCCP           equ	919	;# 
   223     0398                     IOCCN           equ	920	;# 
   224     0399                     IOCCF           equ	921	;# 
   225     039D                     IOCEP           equ	925	;# 
   226     039E                     IOCEN           equ	926	;# 
   227     039F                     IOCEF           equ	927	;# 
   228     0415                     TMR4            equ	1045	;# 
   229     0416                     PR4             equ	1046	;# 
   230     0417                     T4CON           equ	1047	;# 
   231     041C                     TMR6            equ	1052	;# 
   232     041D                     PR6             equ	1053	;# 
   233     041E                     T6CON           equ	1054	;# 
   234     0498                     NCO1ACC         equ	1176	;# 
   235     0498                     NCO1ACCL        equ	1176	;# 
   236     0499                     NCO1ACCH        equ	1177	;# 
   237     049A                     NCO1ACCU        equ	1178	;# 
   238     049B                     NCO1INC         equ	1179	;# 
   239     049B                     NCO1INCL        equ	1179	;# 
   240     049C                     NCO1INCH        equ	1180	;# 
   241     049D                     NCO1INCU        equ	1181	;# 
   242     049E                     NCO1CON         equ	1182	;# 
   243     049F                     NCO1CLK         equ	1183	;# 
   244     0511                     OPA1CON         equ	1297	;# 
   245     0515                     OPA2CON         equ	1301	;# 
   246     0617                     PWM3DCL         equ	1559	;# 
   247     0618                     PWM3DCH         equ	1560	;# 
   248     0619                     PWM3CON         equ	1561	;# 
   249     0619                     PWM3CON0        equ	1561	;# 
   250     061A                     PWM4DCL         equ	1562	;# 
   251     061B                     PWM4DCH         equ	1563	;# 
   252     061C                     PWM4CON         equ	1564	;# 
   253     061C                     PWM4CON0        equ	1564	;# 
   254     0691                     COG1PHR         equ	1681	;# 
   255     0692                     COG1PHF         equ	1682	;# 
   256     0693                     COG1BLKR        equ	1683	;# 
   257     0694                     COG1BLKF        equ	1684	;# 
   258     0695                     COG1DBR         equ	1685	;# 
   259     0696                     COG1DBF         equ	1686	;# 
   260     0697                     COG1CON0        equ	1687	;# 
   261     0698                     COG1CON1        equ	1688	;# 
   262     0699                     COG1RIS         equ	1689	;# 
   263     069A                     COG1RSIM        equ	1690	;# 
   264     069B                     COG1FIS         equ	1691	;# 
   265     069C                     COG1FSIM        equ	1692	;# 
   266     069D                     COG1ASD0        equ	1693	;# 
   267     069E                     COG1ASD1        equ	1694	;# 
   268     069F                     COG1STR         equ	1695	;# 
   269     0E0F                     PPSLOCK         equ	3599	;# 
   270     0E10                     INTPPS          equ	3600	;# 
   271     0E11                     T0CKIPPS        equ	3601	;# 
   272     0E12                     T1CKIPPS        equ	3602	;# 
   273     0E13                     T1GPPS          equ	3603	;# 
   274     0E14                     CCP1PPS         equ	3604	;# 
   275     0E15                     CCP2PPS         equ	3605	;# 
   276     0E17                     COGINPPS        equ	3607	;# 
   277     0E20                     SSPCLKPPS       equ	3616	;# 
   278     0E21                     SSPDATPPS       equ	3617	;# 
   279     0E22                     SSPSSPPS        equ	3618	;# 
   280     0E24                     RXPPS           equ	3620	;# 
   281     0E25                     CKPPS           equ	3621	;# 
   282     0E28                     CLCIN0PPS       equ	3624	;# 
   283     0E29                     CLCIN1PPS       equ	3625	;# 
   284     0E2A                     CLCIN2PPS       equ	3626	;# 
   285     0E2B                     CLCIN3PPS       equ	3627	;# 
   286     0E90                     RA0PPS          equ	3728	;# 
   287     0E91                     RA1PPS          equ	3729	;# 
   288     0E92                     RA2PPS          equ	3730	;# 
   289     0E93                     RA3PPS          equ	3731	;# 
   290     0E94                     RA4PPS          equ	3732	;# 
   291     0E95                     RA5PPS          equ	3733	;# 
   292     0E96                     RA6PPS          equ	3734	;# 
   293     0E97                     RA7PPS          equ	3735	;# 
   294     0E98                     RB0PPS          equ	3736	;# 
   295     0E99                     RB1PPS          equ	3737	;# 
   296     0E9A                     RB2PPS          equ	3738	;# 
   297     0E9B                     RB3PPS          equ	3739	;# 
   298     0E9C                     RB4PPS          equ	3740	;# 
   299     0E9D                     RB5PPS          equ	3741	;# 
   300     0E9E                     RB6PPS          equ	3742	;# 
   301     0E9F                     RB7PPS          equ	3743	;# 
   302     0EA0                     RC0PPS          equ	3744	;# 
   303     0EA1                     RC1PPS          equ	3745	;# 
   304     0EA2                     RC2PPS          equ	3746	;# 
   305     0EA3                     RC3PPS          equ	3747	;# 
   306     0EA4                     RC4PPS          equ	3748	;# 
   307     0EA5                     RC5PPS          equ	3749	;# 
   308     0EA6                     RC6PPS          equ	3750	;# 
   309     0EA7                     RC7PPS          equ	3751	;# 
   310     0EA8                     RD0PPS          equ	3752	;# 
   311     0EA9                     RD1PPS          equ	3753	;# 
   312     0EAA                     RD2PPS          equ	3754	;# 
   313     0EAB                     RD3PPS          equ	3755	;# 
   314     0EAC                     RD4PPS          equ	3756	;# 
   315     0EAD                     RD5PPS          equ	3757	;# 
   316     0EAE                     RD6PPS          equ	3758	;# 
   317     0EAF                     RD7PPS          equ	3759	;# 
   318     0EB0                     RE0PPS          equ	3760	;# 
   319     0EB1                     RE1PPS          equ	3761	;# 
   320     0EB2                     RE2PPS          equ	3762	;# 
   321     0F0F                     CLCDATA         equ	3855	;# 
   322     0F10                     CLC1CON         equ	3856	;# 
   323     0F11                     CLC1POL         equ	3857	;# 
   324     0F12                     CLC1SEL0        equ	3858	;# 
   325     0F13                     CLC1SEL1        equ	3859	;# 
   326     0F14                     CLC1SEL2        equ	3860	;# 
   327     0F15                     CLC1SEL3        equ	3861	;# 
   328     0F16                     CLC1GLS0        equ	3862	;# 
   329     0F17                     CLC1GLS1        equ	3863	;# 
   330     0F18                     CLC1GLS2        equ	3864	;# 
   331     0F19                     CLC1GLS3        equ	3865	;# 
   332     0F1A                     CLC2CON         equ	3866	;# 
   333     0F1B                     CLC2POL         equ	3867	;# 
   334     0F1C                     CLC2SEL0        equ	3868	;# 
   335     0F1D                     CLC2SEL1        equ	3869	;# 
   336     0F1E                     CLC2SEL2        equ	3870	;# 
   337     0F1F                     CLC2SEL3        equ	3871	;# 
   338     0F20                     CLC2GLS0        equ	3872	;# 
   339     0F21                     CLC2GLS1        equ	3873	;# 
   340     0F22                     CLC2GLS2        equ	3874	;# 
   341     0F23                     CLC2GLS3        equ	3875	;# 
   342     0F24                     CLC3CON         equ	3876	;# 
   343     0F25                     CLC3POL         equ	3877	;# 
   344     0F26                     CLC3SEL0        equ	3878	;# 
   345     0F27                     CLC3SEL1        equ	3879	;# 
   346     0F28                     CLC3SEL2        equ	3880	;# 
   347     0F29                     CLC3SEL3        equ	3881	;# 
   348     0F2A                     CLC3GLS0        equ	3882	;# 
   349     0F2B                     CLC3GLS1        equ	3883	;# 
   350     0F2C                     CLC3GLS2        equ	3884	;# 
   351     0F2D                     CLC3GLS3        equ	3885	;# 
   352     0F2E                     CLC4CON         equ	3886	;# 
   353     0F2F                     CLC4POL         equ	3887	;# 
   354     0F30                     CLC4SEL0        equ	3888	;# 
   355     0F31                     CLC4SEL1        equ	3889	;# 
   356     0F32                     CLC4SEL2        equ	3890	;# 
   357     0F33                     CLC4SEL3        equ	3891	;# 
   358     0F34                     CLC4GLS0        equ	3892	;# 
   359     0F35                     CLC4GLS1        equ	3893	;# 
   360     0F36                     CLC4GLS2        equ	3894	;# 
   361     0F37                     CLC4GLS3        equ	3895	;# 
   362     0FE4                     STATUS_SHAD     equ	4068	;# 
   363     0FE5                     WREG_SHAD       equ	4069	;# 
   364     0FE6                     BSR_SHAD        equ	4070	;# 
   365     0FE7                     PCLATH_SHAD     equ	4071	;# 
   366     0FE8                     FSR0L_SHAD      equ	4072	;# 
   367     0FE9                     FSR0H_SHAD      equ	4073	;# 
   368     0FEA                     FSR1L_SHAD      equ	4074	;# 
   369     0FEB                     FSR1H_SHAD      equ	4075	;# 
   370     0FED                     STKPTR          equ	4077	;# 
   371     0FEE                     TOSL            equ	4078	;# 
   372     0FEF                     TOSH            equ	4079	;# 
   373     009B                     _ADRESL         set	155
   374     009C                     _ADRESH         set	156
   375     009E                     _ADCON1bits     set	158
   376     009D                     _ADCON0bits     set	157
   377     008C                     _TRISAbits      set	140
   378     008D                     _TRISB          set	141
   379     008F                     _TRISD          set	143
   380     010D                     _LATB           set	269
   381     010F                     _LATD           set	271
   382     018C                     _ANSELAbits     set	396
   383                           
   384                           	psect	cinit
   385     07FD                     start_initialization:	
   386                           ; #config settings
   387                           
   388     07FD                     __initialization:
   389     07FD                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392     07FD                     __end_of__initialization:
   393     07FD  0020               	movlb	0
   394     07FE  3187  2FC0         	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	cstackCOMMON
   397     0070                     __pcstackCOMMON:
   398     0070                     ?_setupLEDS:
   399     0070                     ?_setupPotentiometer:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_setupADC:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_displayLEDs:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_get_potentiometer_value:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     displayLEDs@adcValue:	
   415                           ; 2 bytes @ 0x0
   416                           
   417     0070                     ??_setupLEDS:	
   418                           ; 2 bytes @ 0x0
   419                           
   420     0070                     ??_setupPotentiometer:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ??_setupADC:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 1 bytes @ 0x0
   428     0070                     	ds	2
   429     0072                     ??_get_potentiometer_value:
   430     0072                     ??_displayLEDs:	
   431                           ; 1 bytes @ 0x2
   432                           
   433                           
   434                           ; 1 bytes @ 0x2
   435     0072                     	ds	2
   436     0074                     displayLEDs@r:
   437                           
   438                           ; 1 bytes @ 0x4
   439     0074                     	ds	1
   440     0075                     main@adcValue:
   441     0075                     ??_main:	
   442                           ; 2 bytes @ 0x5
   443                           
   444                           
   445                           ; 1 bytes @ 0x5
   446     0075                     	ds	2
   447                           
   448                           	psect	maintext
   449     07C0                     __pmaintext:	
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 51 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  adcValue        2    5[COMMON] unsigned int 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, pclath, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : B1F/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels required when called: 1
   475 ;; This function calls:
   476 ;;		_displayLEDs
   477 ;;		_get_potentiometer_value
   478 ;;		_setupADC
   479 ;;		_setupLEDS
   480 ;;		_setupPotentiometer
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     07C0                     _main:	
   487                           ;psect for function _main
   488                           
   489     07C0                     l620:	
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;main.c: 53:     setupLEDS();
   495     07C0  3187  27AB  3187   	fcall	_setupLEDS
   496                           
   497                           ;main.c: 54:     setupPotentiometer();
   498     07C3  3187  27A0  3187   	fcall	_setupPotentiometer
   499     07C6                     l622:
   500                           
   501                           ;main.c: 55:     setupADC();
   502     07C6  3187  27A5  3187   	fcall	_setupADC
   503     07C9                     l624:
   504                           
   505                           ;main.c: 58:         unsigned int adcValue = get_potentiometer_value();
   506     07C9  3187  27B3  3187   	fcall	_get_potentiometer_value
   507     07CC  0871               	movf	?_get_potentiometer_value+1,w
   508     07CD  00F6               	movwf	main@adcValue+1
   509     07CE  0870               	movf	?_get_potentiometer_value,w
   510     07CF  00F5               	movwf	main@adcValue
   511     07D0                     l626:
   512                           
   513                           ;main.c: 59:         displayLEDs(adcValue);
   514     07D0  0876               	movf	main@adcValue+1,w
   515     07D1  00F1               	movwf	displayLEDs@adcValue+1
   516     07D2  0875               	movf	main@adcValue,w
   517     07D3  00F0               	movwf	displayLEDs@adcValue
   518     07D4  3187  27DA  3187   	fcall	_displayLEDs
   519     07D7  2FC9               	goto	l624
   520     07D8  3180  2802         	ljmp	start
   521     07DA                     __end_of_main:
   522                           
   523                           	psect	text1
   524     07A0                     __ptext1:	
   525 ;; *************** function _setupPotentiometer *****************
   526 ;; Defined at:
   527 ;;		line 21 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		None
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554     07A0                     _setupPotentiometer:	
   555                           ;psect for function _setupPotentiometer
   556                           
   557     07A0                     l576:	
   558                           ;incstack = 0
   559                           ; Regs used in _setupPotentiometer: []
   560                           
   561                           
   562                           ;main.c: 22:     TRISAbits.TRISA0 = 1;
   563     07A0  0021               	movlb	1	; select bank1
   564     07A1  140C               	bsf	12,0	;volatile
   565                           
   566                           ;main.c: 23:     ANSELAbits.ANSA0 = 1;
   567     07A2  0023               	movlb	3	; select bank3
   568     07A3  140C               	bsf	12,0	;volatile
   569     07A4                     l26:
   570     07A4  0008               	return
   571     07A5                     __end_of_setupPotentiometer:
   572                           
   573                           	psect	text2
   574     07AB                     __ptext2:	
   575 ;; *************** function _setupLEDS *****************
   576 ;; Defined at:
   577 ;;		line 13 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     07AB                     _setupLEDS:	
   605                           ;psect for function _setupLEDS
   606                           
   607     07AB                     l572:	
   608                           ;incstack = 0
   609                           ; Regs used in _setupLEDS: [status,2]
   610                           
   611                           
   612                           ;main.c: 14:     TRISD = 0x00;
   613     07AB  0021               	movlb	1	; select bank1
   614     07AC  018F               	clrf	15	;volatile
   615                           
   616                           ;main.c: 15:     TRISB = 0x00;
   617     07AD  018D               	clrf	13	;volatile
   618     07AE                     l574:
   619                           
   620                           ;main.c: 16:     LATD = 0b0001;
   621     07AE  3001               	movlw	1
   622     07AF  0022               	movlb	2	; select bank2
   623     07B0  008F               	movwf	15	;volatile
   624                           
   625                           ;main.c: 17:     LATB = 0b0000;
   626     07B1  018D               	clrf	13	;volatile
   627     07B2                     l23:
   628     07B2  0008               	return
   629     07B3                     __end_of_setupLEDS:
   630                           
   631                           	psect	text3
   632     07A5                     __ptext3:	
   633 ;; *************** function _setupADC *****************
   634 ;; Defined at:
   635 ;;		line 27 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662     07A5                     _setupADC:	
   663                           ;psect for function _setupADC
   664                           
   665     07A5                     l578:	
   666                           ;incstack = 0
   667                           ; Regs used in _setupADC: [wreg+status,2+status,0]
   668                           
   669                           
   670                           ;main.c: 28:     ADCON0bits.CHS = 0b00000;
   671     07A5  3083               	movlw	-125
   672     07A6  0021               	movlb	1	; select bank1
   673     07A7  059D               	andwf	29,f	;volatile
   674     07A8                     l580:
   675                           
   676                           ;main.c: 29:     ADCON0bits.ADON = 1;
   677     07A8  141D               	bsf	29,0	;volatile
   678     07A9                     l582:
   679                           
   680                           ;main.c: 30:     ADCON1bits.ADFM = 1;
   681     07A9  179E               	bsf	30,7	;volatile
   682     07AA                     l29:
   683     07AA  0008               	return
   684     07AB                     __end_of_setupADC:
   685                           
   686                           	psect	text4
   687     07B3                     __ptext4:	
   688 ;; *************** function _get_potentiometer_value *****************
   689 ;; Defined at:
   690 ;;		line 35 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  2    0[COMMON] unsigned int 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717     07B3                     _get_potentiometer_value:	
   718                           ;psect for function _get_potentiometer_value
   719                           
   720     07B3                     l606:	
   721                           ;incstack = 0
   722                           ; Regs used in _get_potentiometer_value: [wreg+status,2+status,0]
   723                           
   724                           
   725                           ;main.c: 36:     ADCON0bits.CHS = 0b00000;
   726     07B3  3083               	movlw	-125
   727     07B4  0021               	movlb	1	; select bank1
   728     07B5  059D               	andwf	29,f	;volatile
   729     07B6                     l608:
   730                           
   731                           ;main.c: 37:     ADCON0bits.GO = 1;
   732     07B6  149D               	bsf	29,1	;volatile
   733     07B7                     l32:	
   734                           ;main.c: 38:     while(ADCON0bits.GO);
   735                           
   736     07B7  189D               	btfsc	29,1	;volatile
   737     07B8  2FBA               	goto	u51
   738     07B9  2FBB               	goto	u50
   739     07BA                     u51:
   740     07BA  2FB7               	goto	l32
   741     07BB                     u50:
   742     07BB                     l610:
   743                           
   744                           ;main.c: 40:     return ((ADRESH << 8) + ADRESL);
   745     07BB  081C               	movf	28,w	;volatile
   746     07BC  00F1               	movwf	?_get_potentiometer_value+1
   747     07BD  081B               	movf	27,w	;volatile
   748     07BE  00F0               	movwf	?_get_potentiometer_value
   749     07BF                     l35:
   750     07BF  0008               	return
   751     07C0                     __end_of_get_potentiometer_value:
   752                           
   753                           	psect	text5
   754     07DA                     __ptext5:	
   755 ;; *************** function _displayLEDs *****************
   756 ;; Defined at:
   757 ;;		line 44 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  adcValue        2    0[COMMON] unsigned int 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  r               1    4[COMMON] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   774 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   775 ;;Total ram usage:        5 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784     07DA                     _displayLEDs:	
   785                           ;psect for function _displayLEDs
   786                           
   787     07DA                     l614:	
   788                           ;incstack = 0
   789                           ; Regs used in _displayLEDs: [wreg+status,2+status,0]
   790                           
   791                           
   792                           ;main.c: 45:    adcValue = adcValue >> 7;
   793     07DA  0871               	movf	displayLEDs@adcValue+1,w
   794     07DB  00F3               	movwf	??_displayLEDs+1
   795     07DC  0870               	movf	displayLEDs@adcValue,w
   796     07DD  00F2               	movwf	??_displayLEDs
   797     07DE  3007               	movlw	7
   798     07DF                     u65:
   799     07DF  36F3               	lsrf	??_displayLEDs+1,f
   800     07E0  0CF2               	rrf	??_displayLEDs,f
   801     07E1  0B89               	decfsz	9,f
   802     07E2  2FDF               	goto	u65
   803     07E3  0872               	movf	??_displayLEDs,w
   804     07E4  00F0               	movwf	displayLEDs@adcValue
   805     07E5  0873               	movf	??_displayLEDs+1,w
   806     07E6  00F1               	movwf	displayLEDs@adcValue+1
   807                           
   808                           ;main.c: 46:    char r = 1 << adcValue;
   809     07E7  3001               	movlw	1
   810     07E8  00F2               	movwf	??_displayLEDs
   811     07E9  0A70               	incf	displayLEDs@adcValue,w
   812     07EA  2FEC               	goto	u74
   813     07EB                     u75:
   814     07EB  35F2               	lslf	??_displayLEDs,f
   815     07EC                     u74:
   816     07EC  0B89               	decfsz	9,f
   817     07ED  2FEB               	goto	u75
   818     07EE  0872               	movf	??_displayLEDs,w
   819     07EF  00F4               	movwf	displayLEDs@r
   820     07F0                     l616:
   821                           
   822                           ;main.c: 47:    LATD = r & 0b1111;
   823     07F0  0874               	movf	displayLEDs@r,w
   824     07F1  390F               	andlw	15
   825     07F2  0022               	movlb	2	; select bank2
   826     07F3  008F               	movwf	15	;volatile
   827     07F4                     l618:
   828                           
   829                           ;main.c: 48:    LATB = r >> 4;
   830     07F4  0874               	movf	displayLEDs@r,w
   831     07F5  00F2               	movwf	??_displayLEDs
   832     07F6  3004               	movlw	4
   833     07F7                     u85:
   834     07F7  36F2               	lsrf	??_displayLEDs,f
   835     07F8  0B89               	decfsz	9,f
   836     07F9  2FF7               	goto	u85
   837     07FA  0872               	movf	??_displayLEDs,w
   838     07FB  008D               	movwf	13	;volatile
   839     07FC                     l38:
   840     07FC  0008               	return
   841     07FD                     __end_of_displayLEDs:
   842     0003                     ___latbits      equ	3
   843     007E                     btemp           set	126	;btemp
   844     007E                     wtemp0          set	126
   845                           
   846                           	psect	config
   847                           
   848                           ;Config register CONFIG1 @ 0x8007
   849                           ;	Oscillator Selection Bits
   850                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
   851                           ;	Watchdog Timer Enable
   852                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
   853                           ;	Power-up Timer Enable
   854                           ;	PWRTE = OFF, PWRT disabled
   855                           ;	MCLR Pin Function Select
   856                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   857                           ;	Flash Program Memory Code Protection
   858                           ;	CP = OFF, Program memory code protection is disabled
   859                           ;	Brown-out Reset Enable
   860                           ;	BOREN = ON, Brown-out Reset enabled
   861                           ;	Clock Out Enable
   862                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   863                           ;	Internal/External Switchover Mode
   864                           ;	IESO = ON, Internal/External Switchover Mode is enabled
   865                           ;	Fail-Safe Clock Monitor Enable
   866                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   867     8007                     	org	32775
   868     8007  3FEA               	dw	16362
   869                           
   870                           ;Config register CONFIG2 @ 0x8008
   871                           ;	Flash Memory Self-Write Protection
   872                           ;	WRT = OFF, Write protection off
   873                           ;	Peripheral Pin Select one-way control
   874                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
   875                           ;	Zero-cross detect disable
   876                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   877                           ;	Phase Lock Loop enable
   878                           ;	PLLEN = OFF, 4x PLL is disabled
   879                           ;	Stack Overflow/Underflow Reset Enable
   880                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   881                           ;	Brown-out Reset Voltage Selection
   882                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   883                           ;	Low-Power Brown Out Reset
   884                           ;	LPBOR = OFF, Low-Power BOR is disabled
   885                           ;	In-Circuit Debugger Mode
   886                           ;	DEBUG = 0x1, unprogrammed default
   887                           ;	Low-Voltage Programming Enable
   888                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   889     8008                     	org	32776
   890     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_displayLEDs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     114
                                              5 COMMON     2     2      0
                        _displayLEDs
            _get_potentiometer_value
                           _setupADC
                          _setupLEDS
                 _setupPotentiometer
 ---------------------------------------------------------------------------------
 (1) _setupPotentiometer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLEDS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_potentiometer_value                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _displayLEDs                                          5     3      2      91
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayLEDs
   _get_potentiometer_value
   _setupADC
   _setupLEDS
   _setupPotentiometer

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Feb 19 20:50:55 2025

                   ?_displayLEDs 0070                               l23 07B2                               l32 07B7  
                             l26 07A4                               l35 07BF                               l29 07AA  
                             l38 07FC                               u50 07BB                               u51 07BA  
                             u65 07DF                               u74 07EC                               u75 07EB  
                             u85 07F7          _get_potentiometer_value 07B3                              l610 07BB  
                            l620 07C0                              l614 07DA                              l606 07B3  
                            l622 07C6                              l616 07F0                              l608 07B6  
                            l624 07C9                              l618 07F4                              l626 07D0  
                            l580 07A8                              l572 07AB                              l582 07A9  
                            l574 07AE                              l576 07A0                              l578 07A5  
                            wreg 0009                             _LATB 010D                             _LATD 010F  
                           _main 07C0                             btemp 007E                     main@adcValue 0075  
                           start 0002                            ?_main 0070                     displayLEDs@r 0074  
                          _TRISB 008D                            _TRISD 008F                            wtemp0 007E  
                __initialization 07FD                     __end_of_main 07DA        ??_get_potentiometer_value 0072  
                         ??_main 0075                           _ADRESH 009C                           _ADRESL 009B  
               __end_of_setupADC 07AB  __end_of_get_potentiometer_value 07C0          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                       __pmaintext 07C0                        ?_setupADC 0070  
                        __ptext1 07A0                          __ptext2 07AB                          __ptext3 07A5  
                        __ptext4 07B3                          __ptext5 07DA             end_of_initialization 07FD  
              __end_of_setupLEDS 07B3                       ??_setupADC 0070                        _TRISAbits 008C  
       ?_get_potentiometer_value 0070                    ??_displayLEDs 0072              start_initialization 07FD  
     __end_of_setupPotentiometer 07A5              __end_of_displayLEDs 07FD                        ___latbits 0003  
            displayLEDs@adcValue 0070                        _setupLEDS 07AB                      _displayLEDs 07DA  
                     _ADCON0bits 009D                       _ADCON1bits 009E                       ?_setupLEDS 0070  
                     _ANSELAbits 018C                         _setupADC 07A5               _setupPotentiometer 07A0  
            ?_setupPotentiometer 0070                      ??_setupLEDS 0070             ??_setupPotentiometer 0070  
