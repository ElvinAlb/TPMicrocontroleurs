

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Feb 10 23:25:21 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,space=0,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 07/09/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1719 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0008                     bsr             equ	8
    51     0005                     fsr0h           equ	5
    52     0004                     fsr0l           equ	4
    53     0007                     fsr1h           equ	7
    54     0006                     fsr1l           equ	6
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0001                     indf1           equ	1
    58     000B                     intcon          equ	11
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0009                     wreg            equ	9
    64     0000                     INDF0           equ	0	;# 
    65     0001                     INDF1           equ	1	;# 
    66     0002                     PCL             equ	2	;# 
    67     0003                     STATUS          equ	3	;# 
    68     0004                     FSR0L           equ	4	;# 
    69     0005                     FSR0H           equ	5	;# 
    70     0006                     FSR1L           equ	6	;# 
    71     0007                     FSR1H           equ	7	;# 
    72     0008                     BSR             equ	8	;# 
    73     0009                     WREG            equ	9	;# 
    74     000A                     PCLATH          equ	10	;# 
    75     000B                     INTCON          equ	11	;# 
    76     000C                     PORTA           equ	12	;# 
    77     000D                     PORTB           equ	13	;# 
    78     000E                     PORTC           equ	14	;# 
    79     000F                     PORTD           equ	15	;# 
    80     0010                     PORTE           equ	16	;# 
    81     0011                     PIR1            equ	17	;# 
    82     0012                     PIR2            equ	18	;# 
    83     0013                     PIR3            equ	19	;# 
    84     0015                     TMR0            equ	21	;# 
    85     0016                     TMR1            equ	22	;# 
    86     0016                     TMR1L           equ	22	;# 
    87     0017                     TMR1H           equ	23	;# 
    88     0018                     T1CON           equ	24	;# 
    89     0019                     T1GCON          equ	25	;# 
    90     001A                     TMR2            equ	26	;# 
    91     001B                     PR2             equ	27	;# 
    92     001C                     T2CON           equ	28	;# 
    93     008C                     TRISA           equ	140	;# 
    94     008D                     TRISB           equ	141	;# 
    95     008E                     TRISC           equ	142	;# 
    96     008F                     TRISD           equ	143	;# 
    97     0090                     TRISE           equ	144	;# 
    98     0091                     PIE1            equ	145	;# 
    99     0092                     PIE2            equ	146	;# 
   100     0093                     PIE3            equ	147	;# 
   101     0095                     OPTION_REG      equ	149	;# 
   102     0096                     PCON            equ	150	;# 
   103     0097                     WDTCON          equ	151	;# 
   104     0098                     OSCTUNE         equ	152	;# 
   105     0099                     OSCCON          equ	153	;# 
   106     009A                     OSCSTAT         equ	154	;# 
   107     009B                     ADRES           equ	155	;# 
   108     009B                     ADRESL          equ	155	;# 
   109     009C                     ADRESH          equ	156	;# 
   110     009D                     ADCON0          equ	157	;# 
   111     009E                     ADCON1          equ	158	;# 
   112     009F                     ADCON2          equ	159	;# 
   113     010C                     LATA            equ	268	;# 
   114     010D                     LATB            equ	269	;# 
   115     010E                     LATC            equ	270	;# 
   116     010F                     LATD            equ	271	;# 
   117     0110                     LATE            equ	272	;# 
   118     0111                     CM1CON0         equ	273	;# 
   119     0112                     CM1CON1         equ	274	;# 
   120     0113                     CM2CON0         equ	275	;# 
   121     0114                     CM2CON1         equ	276	;# 
   122     0115                     CMOUT           equ	277	;# 
   123     0116                     BORCON          equ	278	;# 
   124     0117                     FVRCON          equ	279	;# 
   125     0118                     DAC1CON0        equ	280	;# 
   126     0119                     DAC1CON1        equ	281	;# 
   127     011A                     DAC2CON0        equ	282	;# 
   128     011B                     DAC2REF         equ	283	;# 
   129     011B                     DAC2CON1        equ	283	;# 
   130     011C                     ZCD1CON         equ	284	;# 
   131     018C                     ANSELA          equ	396	;# 
   132     018D                     ANSELB          equ	397	;# 
   133     018E                     ANSELC          equ	398	;# 
   134     018F                     ANSELD          equ	399	;# 
   135     0190                     ANSELE          equ	400	;# 
   136     0191                     PMADR           equ	401	;# 
   137     0191                     PMADRL          equ	401	;# 
   138     0192                     PMADRH          equ	402	;# 
   139     0193                     PMDAT           equ	403	;# 
   140     0193                     PMDATL          equ	403	;# 
   141     0194                     PMDATH          equ	404	;# 
   142     0195                     PMCON1          equ	405	;# 
   143     0196                     PMCON2          equ	406	;# 
   144     0197                     VREGCON         equ	407	;# 
   145     0199                     RC1REG          equ	409	;# 
   146     0199                     RCREG           equ	409	;# 
   147     0199                     RCREG1          equ	409	;# 
   148     019A                     TX1REG          equ	410	;# 
   149     019A                     TXREG1          equ	410	;# 
   150     019A                     TXREG           equ	410	;# 
   151     019B                     SP1BRG          equ	411	;# 
   152     019B                     SPBRG           equ	411	;# 
   153     019B                     SP1BRGL         equ	411	;# 
   154     019B                     SPBRG1          equ	411	;# 
   155     019B                     SPBRGL          equ	411	;# 
   156     019C                     SP1BRGH         equ	412	;# 
   157     019C                     SPBRGH          equ	412	;# 
   158     019C                     SPBRGH1         equ	412	;# 
   159     019D                     RC1STA          equ	413	;# 
   160     019D                     RCSTA1          equ	413	;# 
   161     019D                     RCSTA           equ	413	;# 
   162     019E                     TX1STA          equ	414	;# 
   163     019E                     TXSTA1          equ	414	;# 
   164     019E                     TXSTA           equ	414	;# 
   165     019F                     BAUD1CON        equ	415	;# 
   166     019F                     BAUDCON1        equ	415	;# 
   167     019F                     BAUDCTL1        equ	415	;# 
   168     019F                     BAUDCON         equ	415	;# 
   169     019F                     BAUDCTL         equ	415	;# 
   170     020C                     WPUA            equ	524	;# 
   171     020D                     WPUB            equ	525	;# 
   172     020E                     WPUC            equ	526	;# 
   173     020F                     WPUD            equ	527	;# 
   174     0210                     WPUE            equ	528	;# 
   175     0211                     SSP1BUF         equ	529	;# 
   176     0211                     SSPBUF          equ	529	;# 
   177     0212                     SSP1ADD         equ	530	;# 
   178     0212                     SSPADD          equ	530	;# 
   179     0213                     SSP1MSK         equ	531	;# 
   180     0213                     SSPMSK          equ	531	;# 
   181     0214                     SSP1STAT        equ	532	;# 
   182     0214                     SSPSTAT         equ	532	;# 
   183     0215                     SSP1CON1        equ	533	;# 
   184     0215                     SSPCON          equ	533	;# 
   185     0215                     SSPCON1         equ	533	;# 
   186     0215                     SSP1CON         equ	533	;# 
   187     0216                     SSP1CON2        equ	534	;# 
   188     0216                     SSPCON2         equ	534	;# 
   189     0217                     SSP1CON3        equ	535	;# 
   190     0217                     SSPCON3         equ	535	;# 
   191     028C                     ODCONA          equ	652	;# 
   192     028D                     ODCONB          equ	653	;# 
   193     028E                     ODCONC          equ	654	;# 
   194     028F                     ODCOND          equ	655	;# 
   195     0290                     ODCONE          equ	656	;# 
   196     0291                     CCPR1           equ	657	;# 
   197     0291                     CCPR1L          equ	657	;# 
   198     0292                     CCPR1H          equ	658	;# 
   199     0293                     CCP1CON         equ	659	;# 
   200     0293                     ECCP1CON        equ	659	;# 
   201     0298                     CCPR2           equ	664	;# 
   202     0298                     CCPR2L          equ	664	;# 
   203     0299                     CCPR2H          equ	665	;# 
   204     029A                     CCP2CON         equ	666	;# 
   205     029A                     ECCP2CON        equ	666	;# 
   206     029E                     CCPTMRS         equ	670	;# 
   207     030C                     SLRCONA         equ	780	;# 
   208     030D                     SLRCONB         equ	781	;# 
   209     030E                     SLRCONC         equ	782	;# 
   210     030F                     SLRCOND         equ	783	;# 
   211     0310                     SLRCONE         equ	784	;# 
   212     038C                     INLVLA          equ	908	;# 
   213     038D                     INLVLB          equ	909	;# 
   214     038E                     INLVLC          equ	910	;# 
   215     038F                     INLVLD          equ	911	;# 
   216     0390                     INLVLE          equ	912	;# 
   217     0391                     IOCAP           equ	913	;# 
   218     0392                     IOCAN           equ	914	;# 
   219     0393                     IOCAF           equ	915	;# 
   220     0394                     IOCBP           equ	916	;# 
   221     0395                     IOCBN           equ	917	;# 
   222     0396                     IOCBF           equ	918	;# 
   223     0397                     IOCCP           equ	919	;# 
   224     0398                     IOCCN           equ	920	;# 
   225     0399                     IOCCF           equ	921	;# 
   226     039D                     IOCEP           equ	925	;# 
   227     039E                     IOCEN           equ	926	;# 
   228     039F                     IOCEF           equ	927	;# 
   229     0415                     TMR4            equ	1045	;# 
   230     0416                     PR4             equ	1046	;# 
   231     0417                     T4CON           equ	1047	;# 
   232     041C                     TMR6            equ	1052	;# 
   233     041D                     PR6             equ	1053	;# 
   234     041E                     T6CON           equ	1054	;# 
   235     0498                     NCO1ACC         equ	1176	;# 
   236     0498                     NCO1ACCL        equ	1176	;# 
   237     0499                     NCO1ACCH        equ	1177	;# 
   238     049A                     NCO1ACCU        equ	1178	;# 
   239     049B                     NCO1INC         equ	1179	;# 
   240     049B                     NCO1INCL        equ	1179	;# 
   241     049C                     NCO1INCH        equ	1180	;# 
   242     049D                     NCO1INCU        equ	1181	;# 
   243     049E                     NCO1CON         equ	1182	;# 
   244     049F                     NCO1CLK         equ	1183	;# 
   245     0511                     OPA1CON         equ	1297	;# 
   246     0515                     OPA2CON         equ	1301	;# 
   247     0617                     PWM3DCL         equ	1559	;# 
   248     0618                     PWM3DCH         equ	1560	;# 
   249     0619                     PWM3CON         equ	1561	;# 
   250     0619                     PWM3CON0        equ	1561	;# 
   251     061A                     PWM4DCL         equ	1562	;# 
   252     061B                     PWM4DCH         equ	1563	;# 
   253     061C                     PWM4CON         equ	1564	;# 
   254     061C                     PWM4CON0        equ	1564	;# 
   255     0691                     COG1PHR         equ	1681	;# 
   256     0692                     COG1PHF         equ	1682	;# 
   257     0693                     COG1BLKR        equ	1683	;# 
   258     0694                     COG1BLKF        equ	1684	;# 
   259     0695                     COG1DBR         equ	1685	;# 
   260     0696                     COG1DBF         equ	1686	;# 
   261     0697                     COG1CON0        equ	1687	;# 
   262     0698                     COG1CON1        equ	1688	;# 
   263     0699                     COG1RIS         equ	1689	;# 
   264     069A                     COG1RSIM        equ	1690	;# 
   265     069B                     COG1FIS         equ	1691	;# 
   266     069C                     COG1FSIM        equ	1692	;# 
   267     069D                     COG1ASD0        equ	1693	;# 
   268     069E                     COG1ASD1        equ	1694	;# 
   269     069F                     COG1STR         equ	1695	;# 
   270     0E0F                     PPSLOCK         equ	3599	;# 
   271     0E10                     INTPPS          equ	3600	;# 
   272     0E11                     T0CKIPPS        equ	3601	;# 
   273     0E12                     T1CKIPPS        equ	3602	;# 
   274     0E13                     T1GPPS          equ	3603	;# 
   275     0E14                     CCP1PPS         equ	3604	;# 
   276     0E15                     CCP2PPS         equ	3605	;# 
   277     0E17                     COGINPPS        equ	3607	;# 
   278     0E20                     SSPCLKPPS       equ	3616	;# 
   279     0E21                     SSPDATPPS       equ	3617	;# 
   280     0E22                     SSPSSPPS        equ	3618	;# 
   281     0E24                     RXPPS           equ	3620	;# 
   282     0E25                     CKPPS           equ	3621	;# 
   283     0E28                     CLCIN0PPS       equ	3624	;# 
   284     0E29                     CLCIN1PPS       equ	3625	;# 
   285     0E2A                     CLCIN2PPS       equ	3626	;# 
   286     0E2B                     CLCIN3PPS       equ	3627	;# 
   287     0E90                     RA0PPS          equ	3728	;# 
   288     0E91                     RA1PPS          equ	3729	;# 
   289     0E92                     RA2PPS          equ	3730	;# 
   290     0E93                     RA3PPS          equ	3731	;# 
   291     0E94                     RA4PPS          equ	3732	;# 
   292     0E95                     RA5PPS          equ	3733	;# 
   293     0E96                     RA6PPS          equ	3734	;# 
   294     0E97                     RA7PPS          equ	3735	;# 
   295     0E98                     RB0PPS          equ	3736	;# 
   296     0E99                     RB1PPS          equ	3737	;# 
   297     0E9A                     RB2PPS          equ	3738	;# 
   298     0E9B                     RB3PPS          equ	3739	;# 
   299     0E9C                     RB4PPS          equ	3740	;# 
   300     0E9D                     RB5PPS          equ	3741	;# 
   301     0E9E                     RB6PPS          equ	3742	;# 
   302     0E9F                     RB7PPS          equ	3743	;# 
   303     0EA0                     RC0PPS          equ	3744	;# 
   304     0EA1                     RC1PPS          equ	3745	;# 
   305     0EA2                     RC2PPS          equ	3746	;# 
   306     0EA3                     RC3PPS          equ	3747	;# 
   307     0EA4                     RC4PPS          equ	3748	;# 
   308     0EA5                     RC5PPS          equ	3749	;# 
   309     0EA6                     RC6PPS          equ	3750	;# 
   310     0EA7                     RC7PPS          equ	3751	;# 
   311     0EA8                     RD0PPS          equ	3752	;# 
   312     0EA9                     RD1PPS          equ	3753	;# 
   313     0EAA                     RD2PPS          equ	3754	;# 
   314     0EAB                     RD3PPS          equ	3755	;# 
   315     0EAC                     RD4PPS          equ	3756	;# 
   316     0EAD                     RD5PPS          equ	3757	;# 
   317     0EAE                     RD6PPS          equ	3758	;# 
   318     0EAF                     RD7PPS          equ	3759	;# 
   319     0EB0                     RE0PPS          equ	3760	;# 
   320     0EB1                     RE1PPS          equ	3761	;# 
   321     0EB2                     RE2PPS          equ	3762	;# 
   322     0F0F                     CLCDATA         equ	3855	;# 
   323     0F10                     CLC1CON         equ	3856	;# 
   324     0F11                     CLC1POL         equ	3857	;# 
   325     0F12                     CLC1SEL0        equ	3858	;# 
   326     0F13                     CLC1SEL1        equ	3859	;# 
   327     0F14                     CLC1SEL2        equ	3860	;# 
   328     0F15                     CLC1SEL3        equ	3861	;# 
   329     0F16                     CLC1GLS0        equ	3862	;# 
   330     0F17                     CLC1GLS1        equ	3863	;# 
   331     0F18                     CLC1GLS2        equ	3864	;# 
   332     0F19                     CLC1GLS3        equ	3865	;# 
   333     0F1A                     CLC2CON         equ	3866	;# 
   334     0F1B                     CLC2POL         equ	3867	;# 
   335     0F1C                     CLC2SEL0        equ	3868	;# 
   336     0F1D                     CLC2SEL1        equ	3869	;# 
   337     0F1E                     CLC2SEL2        equ	3870	;# 
   338     0F1F                     CLC2SEL3        equ	3871	;# 
   339     0F20                     CLC2GLS0        equ	3872	;# 
   340     0F21                     CLC2GLS1        equ	3873	;# 
   341     0F22                     CLC2GLS2        equ	3874	;# 
   342     0F23                     CLC2GLS3        equ	3875	;# 
   343     0F24                     CLC3CON         equ	3876	;# 
   344     0F25                     CLC3POL         equ	3877	;# 
   345     0F26                     CLC3SEL0        equ	3878	;# 
   346     0F27                     CLC3SEL1        equ	3879	;# 
   347     0F28                     CLC3SEL2        equ	3880	;# 
   348     0F29                     CLC3SEL3        equ	3881	;# 
   349     0F2A                     CLC3GLS0        equ	3882	;# 
   350     0F2B                     CLC3GLS1        equ	3883	;# 
   351     0F2C                     CLC3GLS2        equ	3884	;# 
   352     0F2D                     CLC3GLS3        equ	3885	;# 
   353     0F2E                     CLC4CON         equ	3886	;# 
   354     0F2F                     CLC4POL         equ	3887	;# 
   355     0F30                     CLC4SEL0        equ	3888	;# 
   356     0F31                     CLC4SEL1        equ	3889	;# 
   357     0F32                     CLC4SEL2        equ	3890	;# 
   358     0F33                     CLC4SEL3        equ	3891	;# 
   359     0F34                     CLC4GLS0        equ	3892	;# 
   360     0F35                     CLC4GLS1        equ	3893	;# 
   361     0F36                     CLC4GLS2        equ	3894	;# 
   362     0F37                     CLC4GLS3        equ	3895	;# 
   363     0FE4                     STATUS_SHAD     equ	4068	;# 
   364     0FE5                     WREG_SHAD       equ	4069	;# 
   365     0FE6                     BSR_SHAD        equ	4070	;# 
   366     0FE7                     PCLATH_SHAD     equ	4071	;# 
   367     0FE8                     FSR0L_SHAD      equ	4072	;# 
   368     0FE9                     FSR0H_SHAD      equ	4073	;# 
   369     0FEA                     FSR1L_SHAD      equ	4074	;# 
   370     0FEB                     FSR1H_SHAD      equ	4075	;# 
   371     0FED                     STKPTR          equ	4077	;# 
   372     0FEE                     TOSL            equ	4078	;# 
   373     0FEF                     TOSH            equ	4079	;# 
   374     0011                     _PIR1bits       set	17
   375     001B                     _PR2            set	27
   376     001C                     _T2CONbits      set	28
   377     001C                     _T2CON          set	28
   378     0089                     _TMR2IF         set	137
   379     005F                     _GIE            set	95
   380     005E                     _PEIE           set	94
   381     008D                     _TRISB          set	141
   382     008F                     _TRISD          set	143
   383     0091                     _PIE1bits       set	145
   384     0489                     _TMR2IE         set	1161
   385     010D                     _LATB           set	269
   386     010F                     _LATD           set	271
   387                           
   388                           	psect	cinit
   389     004B                     start_initialization:	
   390                           ; #config settings
   391                           
   392     004B                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395     004B  01F7               	clrf	__pbssCOMMON& (0+127)
   396     004C  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   397     004D  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   398     004E  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   399     004F  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   400     0050                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403     0050                     __end_of__initialization:
   404     0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   405     0051  0020               	movlb	0
   406     0052  3180  28B6         	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409     0077                     __pbssCOMMON:
   410     0077                     _nb_flag:
   411     0077                     	ds	2
   412     0079                     _compteur:
   413     0079                     	ds	2
   414     007B                     _position:
   415     007B                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418     0070                     __pcstackCOMMON:
   419     0070                     ?_setupTimer:
   420     0070                     ?_setupLEDS:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_ISR:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?___awmod:	
   430                           ; 2 bytes @ 0x0
   431                           
   432     0070                     ___awmod@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437     0070                     	ds	2
   438     0072                     ___awmod@dividend:
   439                           
   440                           ; 2 bytes @ 0x2
   441     0072                     	ds	2
   442     0074                     ___awmod@counter:
   443     0074                     ??___awmod:	
   444                           ; 1 bytes @ 0x4
   445                           
   446                           
   447                           ; 1 bytes @ 0x4
   448     0074                     	ds	1
   449     0075                     ___awmod@sign:
   450                           
   451                           ; 1 bytes @ 0x5
   452     0075                     	ds	1
   453     0076                     ??_ISR:
   454                           
   455                           ; 1 bytes @ 0x6
   456     0076                     	ds	1
   457                           
   458                           	psect	cstackBANK0
   459     0000                     __pcstackBANK0:
   460     0000                     ??_setupTimer:
   461     0000                     ??_setupLEDS:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0000                     ??_main:	
   465                           ; 1 bytes @ 0x0
   466                           
   467                           
   468                           	psect	maintext
   469     00B6                     __pmaintext:	
   470                           ; 1 bytes @ 0x0
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 48 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2   51[None  ] int 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B1F/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels required when called: 3
   496 ;; This function calls:
   497 ;;		_setupLEDS
   498 ;;		_setupTimer
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504     00B6                     _main:	
   505                           ;psect for function _main
   506                           
   507     00B6                     l737:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;main.c: 49:     setupLEDS();
   513     00B6  3180  20BF  3180   	fcall	_setupLEDS
   514     00B9                     l739:
   515                           
   516                           ;main.c: 50:     setupTimer();
   517     00B9  3180  20A5  3180   	fcall	_setupTimer
   518     00BC                     l52:	
   519                           ;main.c: 51:     while (1){
   520                           
   521     00BC                     l53:	
   522                           ;main.c: 53:     }
   523                           
   524     00BC  28BC               	goto	l52
   525     00BD  3180  2849         	ljmp	start
   526     00BF                     __end_of_main:
   527                           
   528                           	psect	text1
   529     00A5                     __ptext1:	
   530 ;; *************** function _setupTimer *****************
   531 ;; Defined at:
   532 ;;		line 7 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 2
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560     00A5                     _setupTimer:	
   561                           ;psect for function _setupTimer
   562                           
   563     00A5                     l719:	
   564                           ;incstack = 0
   565                           ; Regs used in _setupTimer: [wreg+status,2+status,0]
   566                           
   567                           
   568                           ;main.c: 10:     T2CON = 0b00001101;
   569     00A5  300D               	movlw	13
   570     00A6  0020               	movlb	0	; select bank0
   571     00A7  009C               	movwf	28	;volatile
   572                           
   573                           ;main.c: 11:     T2CONbits.TMR2ON=1;
   574     00A8  151C               	bsf	28,2	;volatile
   575     00A9                     l721:
   576                           
   577                           ;main.c: 12:     T2CONbits.T2CKPS=0b00;
   578     00A9  30FC               	movlw	-4
   579     00AA  059C               	andwf	28,f	;volatile
   580                           
   581                           ;main.c: 13:     T2CONbits.T2OUTPS=0b1111;
   582     00AB  3078               	movlw	120
   583     00AC  049C               	iorwf	28,f	;volatile
   584     00AD                     l723:
   585                           
   586                           ;main.c: 14:     PR2 = 124;
   587     00AD  307C               	movlw	124
   588     00AE  009B               	movwf	27	;volatile
   589     00AF                     l725:
   590                           
   591                           ;main.c: 15:     PIR1bits.TMR2IF = 0;
   592     00AF  1091               	bcf	17,1	;volatile
   593     00B0                     l727:
   594                           
   595                           ;main.c: 16:     PIE1bits.TMR2IE = 1;
   596     00B0  0021               	movlb	1	; select bank1
   597     00B1  1491               	bsf	17,1	;volatile
   598     00B2                     l729:
   599                           
   600                           ;main.c: 17:     PEIE = 1;
   601     00B2  170B               	bsf	11,6	;volatile
   602     00B3                     l731:
   603                           
   604                           ;main.c: 18:     GIE = 1;
   605     00B3  178B               	bsf	11,7	;volatile
   606     00B4                     l733:
   607                           
   608                           ;main.c: 19:     TMR2IE = 1;
   609     00B4  1491               	bsf	17,1	;volatile
   610     00B5                     l35:
   611     00B5  0008               	return
   612     00B6                     __end_of_setupTimer:
   613                           
   614                           	psect	text2
   615     00BF                     __ptext2:	
   616 ;; *************** function _setupLEDS *****************
   617 ;; Defined at:
   618 ;;		line 22 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 2
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646     00BF                     _setupLEDS:	
   647                           ;psect for function _setupLEDS
   648                           
   649     00BF                     l735:	
   650                           ;incstack = 0
   651                           ; Regs used in _setupLEDS: [status,2]
   652                           
   653                           
   654                           ;main.c: 23:     TRISD = 0x00;
   655     00BF  0021               	movlb	1	; select bank1
   656     00C0  018F               	clrf	15	;volatile
   657                           
   658                           ;main.c: 24:     TRISB = 0x00;
   659     00C1  018D               	clrf	13	;volatile
   660                           
   661                           ;main.c: 25:     LATD = 0x00;
   662     00C2  0022               	movlb	2	; select bank2
   663     00C3  018F               	clrf	15	;volatile
   664                           
   665                           ;main.c: 26:     LATB = 0x00;
   666     00C4  018D               	clrf	13	;volatile
   667     00C5                     l38:
   668     00C5  0008               	return
   669     00C6                     __end_of_setupLEDS:
   670                           
   671                           	psect	intentry
   672     0004                     __pintentry:	
   673 ;; *************** function _ISR *****************
   674 ;; Defined at:
   675 ;;		line 29 in file "main.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; Hardware stack levels required when called: 1
   696 ;; This function calls:
   697 ;;		___awmod
   698 ;; This function is called by:
   699 ;;		Interrupt level 1
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703     0004                     _ISR:
   704                           
   705                           ;incstack = 0
   706     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   707                           
   708                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   709     0005  3180               	pagesel	$
   710     0006                     i1l699:
   711                           
   712                           ;main.c: 30:     if(TMR2IF){
   713     0006  0020               	movlb	0	; select bank0
   714     0007  1C91               	btfss	17,1	;volatile
   715     0008  280A               	goto	u24_21
   716     0009  280B               	goto	u24_20
   717     000A                     u24_21:
   718     000A  2847               	goto	i1l47
   719     000B                     u24_20:
   720     000B                     i1l701:
   721                           
   722                           ;main.c: 31:         nb_flag = (nb_flag + 1)%125;
   723     000B  307D               	movlw	125
   724     000C  00F0               	movwf	___awmod@divisor
   725     000D  3000               	movlw	0
   726     000E  00F1               	movwf	___awmod@divisor+1
   727     000F  0877               	movf	_nb_flag,w
   728     0010  3E01               	addlw	1
   729     0011  00F2               	movwf	___awmod@dividend
   730     0012  3000               	movlw	0
   731     0013  3D78               	addwfc	_nb_flag+1,w
   732     0014  00F3               	movwf	___awmod@dividend+1
   733     0015  3180  2054  3180   	fcall	___awmod
   734     0018  0871               	movf	?___awmod+1,w
   735     0019  00F8               	movwf	_nb_flag+1
   736     001A  0870               	movf	?___awmod,w
   737     001B  00F7               	movwf	_nb_flag
   738     001C                     i1l703:
   739                           
   740                           ;main.c: 32:         if(nb_flag==0){
   741     001C  0877               	movf	_nb_flag,w
   742     001D  0478               	iorwf	_nb_flag+1,w
   743     001E  1D03               	btfss	3,2
   744     001F  2821               	goto	u25_21
   745     0020  2822               	goto	u25_20
   746     0021                     u25_21:
   747     0021  2845               	goto	i1l717
   748     0022                     u25_20:
   749     0022                     i1l705:
   750                           
   751                           ;main.c: 33:             if(position<4){
   752     0022  3004               	movlw	4
   753     0023  027B               	subwf	_position,w
   754     0024  1803               	skipnc
   755     0025  2827               	goto	u26_21
   756     0026  2828               	goto	u26_20
   757     0027                     u26_21:
   758     0027  2834               	goto	i1l711
   759     0028                     u26_20:
   760     0028                     i1l707:
   761                           
   762                           ;main.c: 34:                 LATD = 0x01 << position;
   763     0028  3001               	movlw	1
   764     0029  00F6               	movwf	??_ISR
   765     002A  0A7B               	incf	_position,w
   766     002B  282D               	goto	u27_24
   767     002C                     u27_25:
   768     002C  35F6               	lslf	??_ISR,f
   769     002D                     u27_24:
   770     002D  0B89               	decfsz	9,f
   771     002E  282C               	goto	u27_25
   772     002F  0876               	movf	??_ISR,w
   773     0030  0022               	movlb	2	; select bank2
   774     0031  008F               	movwf	15	;volatile
   775     0032                     i1l709:
   776                           
   777                           ;main.c: 35:                 LATB = 0x00;
   778     0032  018D               	clrf	13	;volatile
   779                           
   780                           ;main.c: 36:             }
   781     0033  2841               	goto	i1l715
   782     0034                     i1l711:
   783                           
   784                           ;main.c: 38:                 LATB = 0x01 << (position - 4);
   785     0034  3001               	movlw	1
   786     0035  00F6               	movwf	??_ISR
   787     0036  087B               	movf	_position,w
   788     0037  3EFC               	addlw	-4
   789     0038  0A89               	incf	9,f
   790     0039  283B               	goto	u28_24
   791     003A                     u28_25:
   792     003A  35F6               	lslf	??_ISR,f
   793     003B                     u28_24:
   794     003B  0B89               	decfsz	9,f
   795     003C  283A               	goto	u28_25
   796     003D  0876               	movf	??_ISR,w
   797     003E  0022               	movlb	2	; select bank2
   798     003F  008D               	movwf	13	;volatile
   799     0040                     i1l713:
   800                           
   801                           ;main.c: 39:                 LATD = 0x00;
   802     0040  018F               	clrf	15	;volatile
   803     0041                     i1l715:
   804                           
   805                           ;main.c: 41:             position = (position + 1) % 8;
   806     0041  087B               	movf	_position,w
   807     0042  3E01               	addlw	1
   808     0043  3907               	andlw	7
   809     0044  00FB               	movwf	_position
   810     0045                     i1l717:
   811                           
   812                           ;main.c: 43:         TMR2IF = 0;
   813     0045  0020               	movlb	0	; select bank0
   814     0046  1091               	bcf	17,1	;volatile
   815     0047                     i1l47:
   816     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   817     0048  0009               	retfie
   818     0049                     __end_of_ISR:
   819                           
   820                           	psect	text4
   821     0054                     __ptext4:	
   822 ;; *************** function ___awmod *****************
   823 ;; Defined at:
   824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  divisor         2    0[COMMON] int 
   827 ;;  dividend        2    2[COMMON] int 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  sign            1    5[COMMON] unsigned char 
   830 ;;  counter         1    4[COMMON] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2    0[COMMON] int 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   844 ;;Total ram usage:        6 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_ISR
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853     0054                     ___awmod:	
   854                           ;psect for function ___awmod
   855                           
   856     0054                     i1l661:	
   857                           ;incstack = 0
   858                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   859                           
   860     0054  01F5               	clrf	___awmod@sign
   861     0055                     i1l663:
   862     0055  1FF3               	btfss	___awmod@dividend+1,7
   863     0056  2858               	goto	u15_21
   864     0057  2859               	goto	u15_20
   865     0058                     u15_21:
   866     0058  2860               	goto	i1l669
   867     0059                     u15_20:
   868     0059                     i1l665:
   869     0059  09F2               	comf	___awmod@dividend,f
   870     005A  09F3               	comf	___awmod@dividend+1,f
   871     005B  0AF2               	incf	___awmod@dividend,f
   872     005C  1903               	skipnz
   873     005D  0AF3               	incf	___awmod@dividend+1,f
   874     005E                     i1l667:
   875     005E  3001               	movlw	1
   876     005F  00F5               	movwf	___awmod@sign
   877     0060                     i1l669:
   878     0060  1FF1               	btfss	___awmod@divisor+1,7
   879     0061  2863               	goto	u16_21
   880     0062  2864               	goto	u16_20
   881     0063                     u16_21:
   882     0063  2869               	goto	i1l673
   883     0064                     u16_20:
   884     0064                     i1l671:
   885     0064  09F0               	comf	___awmod@divisor,f
   886     0065  09F1               	comf	___awmod@divisor+1,f
   887     0066  0AF0               	incf	___awmod@divisor,f
   888     0067  1903               	skipnz
   889     0068  0AF1               	incf	___awmod@divisor+1,f
   890     0069                     i1l673:
   891     0069  0870               	movf	___awmod@divisor,w
   892     006A  0471               	iorwf	___awmod@divisor+1,w
   893     006B  1903               	btfsc	3,2
   894     006C  286E               	goto	u17_21
   895     006D  286F               	goto	u17_20
   896     006E                     u17_21:
   897     006E  2896               	goto	i1l691
   898     006F                     u17_20:
   899     006F                     i1l675:
   900     006F  3001               	movlw	1
   901     0070  00F4               	movwf	___awmod@counter
   902     0071  2879               	goto	i1l681
   903     0072                     i1l677:
   904     0072  3001               	movlw	1
   905     0073                     u18_25:
   906     0073  35F0               	lslf	___awmod@divisor,f
   907     0074  0DF1               	rlf	___awmod@divisor+1,f
   908     0075  0B89               	decfsz	9,f
   909     0076  2873               	goto	u18_25
   910     0077                     i1l679:
   911     0077  3001               	movlw	1
   912     0078  07F4               	addwf	___awmod@counter,f
   913     0079                     i1l681:
   914     0079  1FF1               	btfss	___awmod@divisor+1,7
   915     007A  287C               	goto	u19_21
   916     007B  287D               	goto	u19_20
   917     007C                     u19_21:
   918     007C  2872               	goto	i1l677
   919     007D                     u19_20:
   920     007D                     i1l683:
   921     007D  0871               	movf	___awmod@divisor+1,w
   922     007E  0273               	subwf	___awmod@dividend+1,w
   923     007F  1D03               	skipz
   924     0080  2883               	goto	u20_25
   925     0081  0870               	movf	___awmod@divisor,w
   926     0082  0272               	subwf	___awmod@dividend,w
   927     0083                     u20_25:
   928     0083  1C03               	skipc
   929     0084  2886               	goto	u20_21
   930     0085  2887               	goto	u20_20
   931     0086                     u20_21:
   932     0086  288B               	goto	i1l687
   933     0087                     u20_20:
   934     0087                     i1l685:
   935     0087  0870               	movf	___awmod@divisor,w
   936     0088  02F2               	subwf	___awmod@dividend,f
   937     0089  0871               	movf	___awmod@divisor+1,w
   938     008A  3BF3               	subwfb	___awmod@dividend+1,f
   939     008B                     i1l687:
   940     008B  3001               	movlw	1
   941     008C                     u21_25:
   942     008C  36F1               	lsrf	___awmod@divisor+1,f
   943     008D  0CF0               	rrf	___awmod@divisor,f
   944     008E  0B89               	decfsz	9,f
   945     008F  288C               	goto	u21_25
   946     0090                     i1l689:
   947     0090  3001               	movlw	1
   948     0091  02F4               	subwf	___awmod@counter,f
   949     0092  1D03               	btfss	3,2
   950     0093  2895               	goto	u22_21
   951     0094  2896               	goto	u22_20
   952     0095                     u22_21:
   953     0095  287D               	goto	i1l683
   954     0096                     u22_20:
   955     0096                     i1l691:
   956     0096  0875               	movf	___awmod@sign,w
   957     0097  1903               	btfsc	3,2
   958     0098  289A               	goto	u23_21
   959     0099  289B               	goto	u23_20
   960     009A                     u23_21:
   961     009A  28A0               	goto	i1l695
   962     009B                     u23_20:
   963     009B                     i1l693:
   964     009B  09F2               	comf	___awmod@dividend,f
   965     009C  09F3               	comf	___awmod@dividend+1,f
   966     009D  0AF2               	incf	___awmod@dividend,f
   967     009E  1903               	skipnz
   968     009F  0AF3               	incf	___awmod@dividend+1,f
   969     00A0                     i1l695:
   970     00A0  0873               	movf	___awmod@dividend+1,w
   971     00A1  00F1               	movwf	?___awmod+1
   972     00A2  0872               	movf	___awmod@dividend,w
   973     00A3  00F0               	movwf	?___awmod
   974     00A4                     i1l289:
   975     00A4  0008               	return
   976     00A5                     __end_of___awmod:
   977     0003                     ___latbits      equ	3
   978     007E                     btemp           set	126	;btemp
   979     007E                     int$flags       set	126
   980     007E                     wtemp0          set	126
   981                           
   982                           	psect	config
   983                           
   984                           ;Config register CONFIG1 @ 0x8007
   985                           ;	Oscillator Selection Bits
   986                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
   987                           ;	Watchdog Timer Enable
   988                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
   989                           ;	Power-up Timer Enable
   990                           ;	PWRTE = OFF, PWRT disabled
   991                           ;	MCLR Pin Function Select
   992                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   993                           ;	Flash Program Memory Code Protection
   994                           ;	CP = OFF, Program memory code protection is disabled
   995                           ;	Brown-out Reset Enable
   996                           ;	BOREN = ON, Brown-out Reset enabled
   997                           ;	Clock Out Enable
   998                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   999                           ;	Internal/External Switchover Mode
  1000                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1001                           ;	Fail-Safe Clock Monitor Enable
  1002                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1003     8007                     	org	32775
  1004     8007  3FEA               	dw	16362
  1005                           
  1006                           ;Config register CONFIG2 @ 0x8008
  1007                           ;	Flash Memory Self-Write Protection
  1008                           ;	WRT = OFF, Write protection off
  1009                           ;	Peripheral Pin Select one-way control
  1010                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1011                           ;	Zero-cross detect disable
  1012                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1013                           ;	Phase Lock Loop enable
  1014                           ;	PLLEN = OFF, 4x PLL is disabled
  1015                           ;	Stack Overflow/Underflow Reset Enable
  1016                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1017                           ;	Brown-out Reset Voltage Selection
  1018                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1019                           ;	Low-Power Brown Out Reset
  1020                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1021                           ;	In-Circuit Debugger Mode
  1022                           ;	DEBUG = 0x1, unprogrammed default
  1023                           ;	Low-Voltage Programming Enable
  1024                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1025     8008                     	org	32776
  1026     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _setupLEDS
                         _setupTimer
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLEDS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0     298
                                              6 COMMON     1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupLEDS
   _setupTimer

 _ISR (ROOT)
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      7      12     85.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Feb 10 23:25:21 2025

                     l35 00B5                       l52 00BC                       l53 00BC  
                     l38 00C5                      l721 00A9                      l731 00B3  
                    l723 00AD                      l733 00B4                      l725 00AF  
                    l735 00BF                      l727 00B0                      l719 00A5  
                    l729 00B2                      l737 00B6                      l739 00B9  
                    _GIE 005F                      _PR2 001B                      _ISR 0004  
           ___awmod@sign 0075                      wreg 0009                     ?_ISR 0070  
                   _LATB 010D                     _LATD 010F                     _PEIE 005E  
                   i1l47 0047                     _main 00B6                     btemp 007E  
                   start 0049                    ??_ISR 0076                    ?_main 0070  
        __end_of___awmod 00A5                    _T2CON 001C                    i1l701 000B  
                  i1l711 0034                    i1l703 001C                    i1l289 00A4  
                  i1l713 0040                    i1l705 0022                    i1l715 0041  
                  i1l707 0028                    i1l661 0054                    i1l709 0032  
                  i1l717 0045                    i1l671 0064                    i1l663 0055  
                  i1l681 0079                    i1l673 0069                    i1l665 0059  
                  i1l683 007D                    i1l675 006F                    i1l691 0096  
                  i1l667 005E                    i1l693 009B                    i1l685 0087  
                  i1l677 0072                    i1l669 0060                    i1l695 00A0  
                  i1l687 008B                    i1l679 0077                    i1l689 0090  
                  i1l699 0006                    u20_20 0087                    u20_21 0086  
                  u20_25 0083                    u21_25 008C                    u22_20 0096  
                  u22_21 0095                    u23_20 009B                    u15_20 0059  
                  u23_21 009A                    u15_21 0058                    u16_20 0064  
                  u24_20 000B                    u16_21 0063                    u24_21 000A  
                  u17_20 006F                    u25_20 0022                    u17_21 006E  
                  u25_21 0021                    u26_20 0028                    u26_21 0027  
                  u18_25 0073                    u19_20 007D                    u19_21 007C  
                  u27_24 002D                    u27_25 002C                    u28_24 003B  
                  u28_25 003A                    _TRISB 008D                    _TRISD 008F  
                  status 0003                    wtemp0 007E          __initialization 004B  
           __end_of_main 00BF                   ??_main 0000                   _TMR2IE 0489  
                 _TMR2IF 0089                ??___awmod 0074          ___awmod@divisor 0070  
        ___awmod@counter 0074  __end_of__initialization 0050           __pcstackCOMMON 0070  
             __pmaintext 00B6               __pintentry 0004                  ___awmod 0054  
                __ptext1 00A5                  __ptext2 00BF                  __ptext4 0054  
                _nb_flag 0077                _T2CONbits 001C         ___awmod@dividend 0072  
   end_of_initialization 0050        __end_of_setupLEDS 00C6               _setupTimer 00A5  
    start_initialization 004B              __end_of_ISR 0049              ?_setupTimer 0070  
            __pbssCOMMON 0077                ___latbits 0003            __pcstackBANK0 0000  
               ?___awmod 0070                 _PIE1bits 0091                 _PIR1bits 0011  
              _setupLEDS 00BF               ?_setupLEDS 0070                 _compteur 0079  
               int$flags 007E                 _position 007B             ??_setupTimer 0000  
               intlevel1 0000       __end_of_setupTimer 00B6              ??_setupLEDS 0000  
